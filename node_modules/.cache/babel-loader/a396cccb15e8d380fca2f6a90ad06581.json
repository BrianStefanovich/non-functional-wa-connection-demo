{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{SideNav,SideNavItems,SideNavLink,SideNavMenu,SideNavMenuItem,ToolbarDivider}from\"carbon-components-react\";import{changeNav}from\"./../../store/actions/SideNavActions\";import{Dashboard16,ClosedCaptionAlt16,Network_416,Image16,EventSchedule16,EventsAlt16}from\"@carbon/icons-react\";import React,{Fragment}from\"react\";import{useHistory}from\"react-router-dom\";import{connect}from\"react-redux\";function SideBar(props){var history=useHistory();var redirect=function redirect(path){history.push(\"\".concat(path));};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(SideNav,{isFixedNav:true,expanded:true,isChildOfHeader:false,\"aria-label\":\"Side navigation\",children:/*#__PURE__*/_jsxs(SideNavItems,{children:[/*#__PURE__*/_jsx(SideNavLink,{isActive:props.sideNav===\"dashboard\",renderIcon:Dashboard16,onClick:function onClick(){props.changeTab(\"dashboard\");redirect(\"/app/dashboard\");},children:\"Dashboard\"}),/*#__PURE__*/_jsx(ToolbarDivider,{}),/*#__PURE__*/_jsx(SideNavLink,{renderIcon:ClosedCaptionAlt16,isActive:props.sideNav===\"send-text-message\",onClick:function onClick(){props.changeTab(\"send-text-message\");redirect(\"/app/send-text-message\");},children:\"Send text messages\"}),/*#__PURE__*/_jsx(SideNavLink,{isActive:props.sideNav===\"send-media-message\",renderIcon:Image16,onClick:function onClick(){console.log(\"Closed feature\");props.changeTab(\"send-media-message\");redirect(\"/app/send-media-message\");},children:\"Send media messages\"}),/*#__PURE__*/_jsx(ToolbarDivider,{}),/*#__PURE__*/_jsx(SideNavMenu,{renderIcon:EventSchedule16,title:\"Campaigns\",children:/*#__PURE__*/_jsx(SideNavMenuItem,{children:\"Create new campaign\"})}),/*#__PURE__*/_jsx(ToolbarDivider,{}),/*#__PURE__*/_jsxs(SideNavMenu,{title:\"WA - Connections\",isActive:false,renderIcon:Network_416,children:[props.connections?props.connections.map(function(elm,i){return/*#__PURE__*/_jsx(SideNavMenuItem,{isActive:props.sideNav===\"connection-status/\".concat(elm.id),onClick:function onClick(){props.changeTab(\"connection-status/\".concat(elm.id));redirect(\"/app/connection-status/\".concat(elm.id));},children:elm.id},i);}):\"\",/*#__PURE__*/_jsx(SideNavMenuItem,{isActive:props.sideNav===\"create-new-connection\",onClick:function onClick(){redirect(\"/app/create-new-connection\");props.changeTab(\"create-new-connection\");},children:\"Create new connection\"})]}),/*#__PURE__*/_jsxs(SideNavMenu,{title:\"Contact lists\",renderIcon:EventsAlt16,children:[props.contacts?props.contacts.map(function(elm,i){return/*#__PURE__*/_jsx(SideNavMenuItem,{isActive:props.sideNav===\"contact-status/\".concat(elm.id),onClick:function onClick(){props.changeTab(\"contact-status/\".concat(elm.id));redirect(\"/app/contact-status/\".concat(elm.id));},children:elm.id},i);}):\"\",/*#__PURE__*/_jsx(SideNavMenuItem,{isActive:props.sideNav===\"create-new-contact\",onClick:function onClick(){redirect(\"/app/create-new-contact\");props.changeTab(\"create-new-contact\");},children:\"Create new contact list\"})]})]})})});}var stateToProps=function stateToProps(state){return{connections:state.firestore.ordered.connections,contacts:state.firestore.ordered.contacts,sideNav:state.sideNav.activeTab};};var dispatchToProps=function dispatchToProps(dispatch){return{changeTab:function changeTab(newTab){dispatch(changeNav(newTab));}};};export default connect(stateToProps,dispatchToProps)(SideBar);","map":{"version":3,"sources":["/home/brian/Desktop/non-functional-wa-connection-demo/src/components/SideBar/SideBar.js"],"names":["SideNav","SideNavItems","SideNavLink","SideNavMenu","SideNavMenuItem","ToolbarDivider","changeNav","Dashboard16","ClosedCaptionAlt16","Network_416","Image16","EventSchedule16","EventsAlt16","React","Fragment","useHistory","connect","SideBar","props","history","redirect","path","push","sideNav","changeTab","console","log","connections","map","elm","i","id","contacts","stateToProps","state","firestore","ordered","activeTab","dispatchToProps","dispatch","newTab"],"mappings":"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","sourcesContent":["import {\n  SideNav,\n  SideNavItems,\n  SideNavLink,\n  SideNavMenu,\n  SideNavMenuItem,\n  ToolbarDivider,\n} from \"carbon-components-react\";\n\nimport { changeNav } from \"./../../store/actions/SideNavActions\";\n\nimport {\n  Dashboard16,\n  ClosedCaptionAlt16,\n  Network_416,\n  Image16,\n  EventSchedule16,\n  EventsAlt16,\n} from \"@carbon/icons-react\";\n\nimport React, { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction SideBar(props) {\n  const history = useHistory();\n\n  const redirect = (path) => {\n    history.push(`${path}`);\n  };\n\n  return (\n    <Fragment>\n      <SideNav\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\"\n      >\n        <SideNavItems>\n          <SideNavLink\n            isActive={props.sideNav === \"dashboard\"}\n            renderIcon={Dashboard16}\n            onClick={() => {\n              props.changeTab(\"dashboard\");\n              redirect(\"/app/dashboard\");\n            }}\n          >\n            Dashboard\n          </SideNavLink>\n\n          <ToolbarDivider />\n          <SideNavLink\n            renderIcon={ClosedCaptionAlt16}\n            isActive={props.sideNav === \"send-text-message\"}\n            onClick={() => {\n              props.changeTab(\"send-text-message\");\n              redirect(\"/app/send-text-message\");\n            }}\n          >\n            Send text messages\n          </SideNavLink>\n          <SideNavLink\n            isActive={props.sideNav === \"send-media-message\"}\n            renderIcon={Image16}\n            onClick={() => {\n              console.log(\"Closed feature\");\n              props.changeTab(\"send-media-message\");\n              redirect(\"/app/send-media-message\");\n            }}\n          >\n            Send media messages\n          </SideNavLink>\n\n          <ToolbarDivider />\n\n          <SideNavMenu renderIcon={EventSchedule16} title=\"Campaigns\">\n            <SideNavMenuItem>Create new campaign</SideNavMenuItem>\n          </SideNavMenu>\n\n          <ToolbarDivider />\n\n          <SideNavMenu\n            title=\"WA - Connections\"\n            isActive={false}\n            renderIcon={Network_416}\n          >\n            {props.connections\n              ? props.connections.map((elm, i) => {\n                  return (\n                    <SideNavMenuItem\n                      key={i}\n                      isActive={props.sideNav === `connection-status/${elm.id}`}\n                      onClick={() => {\n                        props.changeTab(`connection-status/${elm.id}`);\n                        redirect(`/app/connection-status/${elm.id}`);\n                      }}\n                    >\n                      {elm.id}\n                    </SideNavMenuItem>\n                  );\n                })\n              : \"\"}\n            <SideNavMenuItem\n              isActive={props.sideNav === `create-new-connection`}\n              onClick={() => {\n                redirect(`/app/create-new-connection`);\n                props.changeTab(`create-new-connection`);\n              }}\n            >\n              Create new connection\n            </SideNavMenuItem>\n          </SideNavMenu>\n\n          <SideNavMenu title=\"Contact lists\" renderIcon={EventsAlt16}>\n            {props.contacts\n              ? props.contacts.map((elm, i) => {\n                  return (\n                    <SideNavMenuItem\n                      key={i}\n                      isActive={props.sideNav === `contact-status/${elm.id}`}\n                      onClick={() => {\n                        props.changeTab(`contact-status/${elm.id}`);\n                        redirect(`/app/contact-status/${elm.id}`);\n                      }}\n                    >\n                      {elm.id}\n                    </SideNavMenuItem>\n                  );\n                })\n              : \"\"}\n            <SideNavMenuItem\n              isActive={props.sideNav === `create-new-contact`}\n              onClick={() => {\n                redirect(`/app/create-new-contact`);\n                props.changeTab(`create-new-contact`);\n              }}\n            >\n              Create new contact list\n            </SideNavMenuItem>\n          </SideNavMenu>\n        </SideNavItems>\n      </SideNav>\n    </Fragment>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    connections: state.firestore.ordered.connections,\n    contacts: state.firestore.ordered.contacts,\n    sideNav: state.sideNav.activeTab,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeTab: (newTab) => {\n      dispatch(changeNav(newTab));\n    },\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(SideBar);\n"]},"metadata":{},"sourceType":"module"}