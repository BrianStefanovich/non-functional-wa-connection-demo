{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import Layout from\"./../components/Layout/Layout\";import SimpleCard from\"./../components/SimpleCard/SimpleCard\";import{Table,TableRow,TableHead,TableHeader,TableBody,TableCell,Button}from\"carbon-components-react\";import{useHistory}from\"react-router-dom\";import{useParams}from\"react-router-dom\";import{connect}from\"react-redux\";import{TrashCan16}from\"@carbon/icons-react\";function ContactStatus(props){var _useParams=useParams(),id=_useParams.id;var deleteContact=function deleteContact(){};var contact=props.contacts.find(function(elm){return elm.id===id;});return/*#__PURE__*/_jsx(\"div\",{className:\"contact-status\",children:/*#__PURE__*/_jsxs(SimpleCard,{title:contact.id,children:[/*#__PURE__*/_jsx(Layout,{col:2,first:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"This is a list with all your contact\\u2019s available variables. To call them in the message, just type it\\u2019s name inside curly braces.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"If you call a variable that doesn\\u2019t exists, \\u201Cundefined\\u201D is going to appear on its place in the message.\"})]}),second:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h3\",{children:\"Available variables\"})})}),/*#__PURE__*/_jsx(TableBody,{children:contact.variables.map(function(elm,i){return/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsxs(TableCell,{children:[\" \",\"{ \".concat(elm,\" }\")]})},i);})}),/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h3\",{children:\"Contacts Available\"})})}),/*#__PURE__*/_jsx(TableBody,{children:/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsxs(TableCell,{children:[\" \",contact.length,\" contacts \"]})})})]})}),/*#__PURE__*/_jsx(Button,{onClick:deleteContact,kind:\"danger\",renderIcon:TrashCan16,children:\"Delete contact list\"})]})});}var stateToProps=function stateToProps(state){return{contacts:state.firestore.ordered.contacts};};export default connect(stateToProps)(ContactStatus);","map":{"version":3,"sources":["/home/brian/Desktop/non-functional-wa-connection-demo/src/pages/ContactStatus.js"],"names":["React","Layout","SimpleCard","Table","TableRow","TableHead","TableHeader","TableBody","TableCell","Button","useHistory","useParams","connect","TrashCan16","ContactStatus","props","id","deleteContact","contact","contacts","find","elm","variables","map","i","length","stateToProps","state","firestore","ordered"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,OACEC,KADF,CAEEC,QAFF,CAGEC,SAHF,CAIEC,WAJF,CAKEC,SALF,CAMEC,SANF,CAOEC,MAPF,KAQO,yBARP,CAUA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,gBACbJ,SAAS,EADI,CACpBK,EADoB,YACpBA,EADoB,CAE5B,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAAE,CAA9B,CAEA,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,QAAN,CAAeC,IAAf,CAAoB,SAACC,GAAD,CAAS,CAC3C,MAAOA,CAAAA,GAAG,CAACL,EAAJ,GAAWA,EAAlB,CACD,CAFe,CAAhB,CAIA,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,MAAC,UAAD,EAAY,KAAK,CAAEE,OAAO,CAACF,EAA3B,wBACE,KAAC,MAAD,EACE,GAAG,CAAE,CADP,CAEE,KAAK,cACH,oCACE,kKADF,cAME,aANF,cAOE,aAPF,cAQE,6IARF,GAHJ,CAiBE,MAAM,cACJ,MAAC,KAAD,yBACE,KAAC,SAAD,wBACE,KAAC,WAAD,wBACE,2CADF,EADF,EADF,cAOE,KAAC,SAAD,WACGE,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAsB,SAACF,GAAD,CAAMG,CAAN,CAAY,CACjC,mBACE,KAAC,QAAD,wBACE,MAAC,SAAD,4BAAkBH,GAAlB,SADF,EAAeG,CAAf,CADF,CAKD,CANA,CADH,EAPF,cAiBE,KAAC,SAAD,wBACE,KAAC,WAAD,wBACE,0CADF,EADF,EAjBF,cAuBE,KAAC,SAAD,wBACE,KAAC,QAAD,wBACE,MAAC,SAAD,gBAAaN,OAAO,CAACO,MAArB,gBADF,EADF,EAvBF,GAlBJ,EADF,cAkDE,KAAC,MAAD,EAAQ,OAAO,CAAER,aAAjB,CAAgC,IAAI,CAAC,QAArC,CAA8C,UAAU,CAAEJ,UAA1D,iCAlDF,GADF,EADF,CA0DD,CAED,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,MAAO,CACLR,QAAQ,CAAEQ,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBV,QAD7B,CAAP,CAGD,CAJD,CAMA,cAAeP,CAAAA,OAAO,CAACc,YAAD,CAAP,CAAsBZ,aAAtB,CAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"./../components/Layout/Layout\";\nimport SimpleCard from \"./../components/SimpleCard/SimpleCard\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button,\n} from \"carbon-components-react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { TrashCan16 } from \"@carbon/icons-react\";\n\nfunction ContactStatus(props) {\n  const { id } = useParams();\n  const deleteContact = () => {};\n\n  const contact = props.contacts.find((elm) => {\n    return elm.id === id;\n  });\n\n  return (\n    <div className=\"contact-status\">\n      <SimpleCard title={contact.id}>\n        <Layout\n          col={2}\n          first={\n            <div>\n              <p>\n                This is a list with all your contact’s available variables. To\n                call them in the message, just type it’s name inside curly\n                braces.\n              </p>\n              <br />\n              <br />\n              <p>\n                If you call a variable that doesn’t exists, “undefined” is going\n                to appear on its place in the message.\n              </p>\n            </div>\n          }\n          second={\n            <Table>\n              <TableHead>\n                <TableHeader>\n                  <h3>Available variables</h3>\n                </TableHeader>\n              </TableHead>\n\n              <TableBody>\n                {contact.variables.map((elm, i) => {\n                  return (\n                    <TableRow key={i}>\n                      <TableCell> {`{ ${elm} }`}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n\n              <TableHead>\n                <TableHeader>\n                  <h3>Contacts Available</h3>\n                </TableHeader>\n              </TableHead>\n\n              <TableBody>\n                <TableRow>\n                  <TableCell> {contact.length} contacts </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          }\n        />\n        <Button onClick={deleteContact} kind=\"danger\" renderIcon={TrashCan16}>\n          Delete contact list\n        </Button>\n      </SimpleCard>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    contacts: state.firestore.ordered.contacts,\n  };\n};\n\nexport default connect(stateToProps)(ContactStatus);\n"]},"metadata":{},"sourceType":"module"}