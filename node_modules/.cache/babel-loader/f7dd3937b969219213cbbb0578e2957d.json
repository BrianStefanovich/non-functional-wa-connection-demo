{"ast":null,"code":"import _regeneratorRuntime from\"/home/brian/Desktop/non-functional-wa-connection-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/brian/Desktop/non-functional-wa-connection-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/brian/Desktop/non-functional-wa-connection-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from\"react\";import{Modal,TextInput,Loading}from\"carbon-components-react\";import{changeNav as _changeNav}from\"./../store/actions/SideNavActions\";import*as QRCode from\"qrcode.react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";function CreateNewConnection(props){var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"This is a non functional demo so this qr doesn't do anything\"),_useState4=_slicedToArray(_useState3,2),qr=_useState4[0],setQr=_useState4[1];var createConnection=function createConnection(){handleClick(\"loading\");setConnectionState(\"qr\");};var _useState5=useState(\"name\"),_useState6=_slicedToArray(_useState5,2),connectionState=_useState6[0],setConnectionState=_useState6[1];var handleModalClose=function handleModalClose(){props.changeNav(\"dashboard\");history.push(\"app/dashboard\");};var handleClick=function handleClick(value){setConnectionState(value);};var handleName=function handleName(e){setName(e.target.value);setQr(qr+e.target.value);};switch(connectionState){case\"name\":return/*#__PURE__*/_jsxs(Modal,{onRequestSubmit:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:createConnection();case 1:case\"end\":return _context.stop();}}},_callee);})),hasForm:true,open:true,modalHeading:/*#__PURE__*/_jsx(\"h2\",{children:\" Create new connection\"}),primaryButtonText:\"Create\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(TextInput,{onChange:handleName,labelText:\"Connection's name\",value:name})]});case\"loading\":return/*#__PURE__*/_jsx(Loading,{});case\"qr\":return/*#__PURE__*/_jsxs(Modal,{onRequestClose:handleModalClose,hasForm:true,passiveModal:true,open:true,modalHeading:/*#__PURE__*/_jsx(\"h2\",{children:\"Scan the code\"}),children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\" Open whatsapp and scan the QR code\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",width:\"100%\"},children:/*#__PURE__*/_jsx(QRCode,{value:qr})})]});default:return null;}}var stateToProps=function stateToProps(state){return{uid:state.firebase.auth.uid,token:state.firebase.profile.token.token};};var dispatchToProps=function dispatchToProps(dispatch){return{changeNav:function changeNav(elm){return dispatch(_changeNav(elm));}};};export default connect(stateToProps,dispatchToProps)(CreateNewConnection);","map":{"version":3,"sources":["/home/brian/Desktop/non-functional-wa-connection-demo/src/pages/CreateNewConnection.js"],"names":["React","useState","Modal","TextInput","Loading","changeNav","QRCode","connect","useHistory","CreateNewConnection","props","history","name","setName","qr","setQr","createConnection","handleClick","setConnectionState","connectionState","handleModalClose","push","value","handleName","e","target","display","justifyContent","width","stateToProps","state","uid","firebase","auth","token","profile","dispatchToProps","dispatch","elm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, TextInput, Loading } from \"carbon-components-react\";\n\nimport { changeNav } from \"./../store/actions/SideNavActions\";\nimport * as QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CreateNewConnection(props) {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [qr, setQr] = useState(\n    \"This is a non functional demo so this qr doesn't do anything\"\n  );\n\n  const createConnection = () => {\n    handleClick(\"loading\");\n    setConnectionState(\"qr\");\n  };\n\n  const [connectionState, setConnectionState] = useState(\"name\");\n\n  const handleModalClose = () => {\n    props.changeNav(\"dashboard\");\n    history.push(\"app/dashboard\");\n  };\n\n  const handleClick = (value) => {\n    setConnectionState(value);\n  };\n\n  const handleName = (e) => {\n    setName(e.target.value);\n    setQr(qr + e.target.value);\n  };\n\n  switch (connectionState) {\n    case \"name\":\n      return (\n        <Modal\n          onRequestSubmit={async () => {\n            createConnection();\n          }}\n          hasForm\n          open\n          modalHeading={<h2> Create new connection</h2>}\n          primaryButtonText=\"Create\"\n        >\n          <br />\n          <TextInput\n            onChange={handleName}\n            labelText=\"Connection's name\"\n            value={name}\n          />\n        </Modal>\n      );\n\n    case \"loading\":\n      return <Loading />;\n\n    case \"qr\":\n      return (\n        <Modal\n          onRequestClose={handleModalClose}\n          hasForm\n          passiveModal\n          open\n          modalHeading={<h2>Scan the code</h2>}\n        >\n          <br />\n          <p> Open whatsapp and scan the QR code</p>\n          <br />\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\n          >\n            <QRCode value={qr} />\n          </div>\n        </Modal>\n      );\n\n    default:\n      return null;\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeNav: (elm) => dispatch(changeNav(elm)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(CreateNewConnection);\n"]},"metadata":{},"sourceType":"module"}