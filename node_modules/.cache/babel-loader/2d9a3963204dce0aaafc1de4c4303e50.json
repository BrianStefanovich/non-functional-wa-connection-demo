{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{Button}from\"carbon-components-react\";import{Add32}from\"@carbon/icons-react\";import{connect}from\"react-redux\";import{CreateVariant as CreateTextVariant}from\"./../../store/actions/TextNessageVariantAction\";import{CreateVariant as CreateMediaVariant}from\"./../../store/actions/MediaMessageVariantAction\";function AddTextEditor(props){if(props.messageType===\"text\"){return/*#__PURE__*/_jsx(\"div\",{className:\"AddTextEditor\",children:/*#__PURE__*/_jsx(Button,{hasIconOnly:true,onClick:function onClick(){return props.createTextVariant({body:\"\",textState:[{type:\"paragraph\",children:[{text:\"Write here your variant...\"}]}],active:true});},renderIcon:Add32,kind:\"secondary\",iconDescription:\"Add new variant\"})});}else if(props.messageType===\"media\"){return/*#__PURE__*/_jsx(\"div\",{className:\"AddTextEditor\",children:/*#__PURE__*/_jsx(Button,{hasIconOnly:true,onClick:function onClick(){return props.createMediaVariant({body:\"\",textState:[{type:\"paragraph\",children:[{text:\"Write here your variant...\"}]}],active:true});},renderIcon:Add32,kind:\"secondary\",iconDescription:\"Add new variant\"})});}}var dispatchToProps=function dispatchToProps(dispatch){return{createTextVariant:function createTextVariant(elm){return dispatch(CreateTextVariant(elm));},createMediaVariant:function createMediaVariant(elm){return dispatch(CreateMediaVariant(elm));}};};export default connect(null,dispatchToProps)(AddTextEditor);","map":{"version":3,"sources":["/home/brian/Desktop/non-functional-wa-connection-demo/src/components/AddTextEditor/AddTextEditor.js"],"names":["React","Button","Add32","connect","CreateVariant","CreateTextVariant","CreateMediaVariant","AddTextEditor","props","messageType","createTextVariant","body","textState","type","children","text","active","createMediaVariant","dispatchToProps","dispatch","elm"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,yBAAvB,CACA,OAASC,KAAT,KAAsB,qBAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,aAAa,GAAIC,CAAAA,iBAA1B,KAAmD,gDAAnD,CACA,OAASD,aAAa,GAAIE,CAAAA,kBAA1B,KAAoD,iDAApD,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,GAAIA,KAAK,CAACC,WAAN,GAAsB,MAA1B,CAAkC,CAChC,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,MAAD,EACE,WAAW,KADb,CAEE,OAAO,CAAE,yBACPD,CAAAA,KAAK,CAACE,iBAAN,CAAwB,CACtBC,IAAI,CAAE,EADgB,CAEtBC,SAAS,CAAE,CACT,CACEC,IAAI,CAAE,WADR,CAEEC,QAAQ,CAAE,CAAC,CAAEC,IAAI,CAAE,4BAAR,CAAD,CAFZ,CADS,CAFW,CAQtBC,MAAM,CAAE,IARc,CAAxB,CADO,EAFX,CAcE,UAAU,CAAEd,KAdd,CAeE,IAAI,CAAE,WAfR,CAgBE,eAAe,CAAC,iBAhBlB,EADF,EADF,CAsBD,CAvBD,IAuBM,IAAIM,KAAK,CAACC,WAAN,GAAsB,OAA1B,CAAmC,CACvC,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,MAAD,EACE,WAAW,KADb,CAEE,OAAO,CAAE,yBACPD,CAAAA,KAAK,CAACS,kBAAN,CAAyB,CACvBN,IAAI,CAAE,EADiB,CAEvBC,SAAS,CAAE,CACT,CACEC,IAAI,CAAE,WADR,CAEEC,QAAQ,CAAE,CAAC,CAAEC,IAAI,CAAE,4BAAR,CAAD,CAFZ,CADS,CAFY,CAQvBC,MAAM,CAAE,IARe,CAAzB,CADO,EAFX,CAcE,UAAU,CAAEd,KAdd,CAeE,IAAI,CAAE,WAfR,CAgBE,eAAe,CAAC,iBAhBlB,EADF,EADF,CAsBD,CACF,CAED,GAAMgB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAc,CACpC,MAAO,CACLT,iBAAiB,CAAE,2BAACU,GAAD,QAASD,CAAAA,QAAQ,CAACd,iBAAiB,CAACe,GAAD,CAAlB,CAAjB,EADd,CAELH,kBAAkB,CAAE,4BAACG,GAAD,QAASD,CAAAA,QAAQ,CAACb,kBAAkB,CAACc,GAAD,CAAnB,CAAjB,EAFf,CAAP,CAID,CALD,CAOA,cAAejB,CAAAA,OAAO,CAAC,IAAD,CAAOe,eAAP,CAAP,CAA+BX,aAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { Button } from \"carbon-components-react\";\nimport { Add32 } from \"@carbon/icons-react\";\nimport { connect } from \"react-redux\";\nimport { CreateVariant as CreateTextVariant } from \"./../../store/actions/TextNessageVariantAction\";\nimport { CreateVariant as CreateMediaVariant } from \"./../../store/actions/MediaMessageVariantAction\";\n\nfunction AddTextEditor(props) {\n  if (props.messageType === \"text\") {\n    return (\n      <div className=\"AddTextEditor\">\n        <Button\n          hasIconOnly\n          onClick={() =>\n            props.createTextVariant({\n              body: \"\",\n              textState: [\n                {\n                  type: \"paragraph\",\n                  children: [{ text: \"Write here your variant...\" }],\n                },\n              ],\n              active: true,\n            })\n          }\n          renderIcon={Add32}\n          kind={\"secondary\"}\n          iconDescription=\"Add new variant\"\n        />\n      </div>\n    );\n  }else if (props.messageType === \"media\") {\n    return (\n      <div className=\"AddTextEditor\">\n        <Button\n          hasIconOnly\n          onClick={() =>\n            props.createMediaVariant({\n              body: \"\",\n              textState: [\n                {\n                  type: \"paragraph\",\n                  children: [{ text: \"Write here your variant...\" }],\n                },\n              ],\n              active: true,\n            })\n          }\n          renderIcon={Add32}\n          kind={\"secondary\"}\n          iconDescription=\"Add new variant\"\n        />\n      </div>\n    );\n  }\n}\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    createTextVariant: (elm) => dispatch(CreateTextVariant(elm)),\n    createMediaVariant: (elm) => dispatch(CreateMediaVariant(elm)),\n  };\n};\n\nexport default connect(null, dispatchToProps)(AddTextEditor);\n"]},"metadata":{},"sourceType":"module"}