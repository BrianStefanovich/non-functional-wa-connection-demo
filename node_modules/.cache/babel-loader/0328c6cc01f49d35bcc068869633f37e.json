{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from\"react\";import SimpleCard from\"./../components/SimpleCard/SimpleCard\";import Layout from\"./../components/Layout/Layout\";import{Table,TableHead,TableRow,TableHeader,TableBody,TableCell}from\"carbon-components-react\";import{connect}from\"react-redux\";function Dashboard(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(SimpleCard,{title:\"WA Connections\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Available Connections\"})}),/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Status\"})})]})}),/*#__PURE__*/_jsx(TableBody,{children:props.connections?props.connections.map(function(elm,i){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:elm.id}),/*#__PURE__*/_jsx(TableCell,{children:\" Online \"})]},i);}):null})]})})}),/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(SimpleCard,{title:\"Contact lists\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"List name\"})}),/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Length\"})}),/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Available variables\"})})]})}),/*#__PURE__*/_jsx(TableBody,{children:props.contacts?props.contacts.map(function(elm,i){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:elm.id}),/*#__PURE__*/_jsxs(TableCell,{children:[\" \",elm.length,\" \"]}),/*#__PURE__*/_jsx(TableCell,{children:elm.variables.toString()})]},i);}):null})]})})})]});}var stateToProps=function stateToProps(state){return{contacts:state.firestore.ordered.contacts,connections:state.firestore.ordered.connections};};export default connect(stateToProps)(Dashboard);","map":{"version":3,"sources":["/home/brian/Desktop/non-functional-wa-connection-demo/src/pages/Dashboard.js"],"names":["React","SimpleCard","Layout","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","connect","Dashboard","props","connections","map","elm","i","id","contacts","length","variables","toString","stateToProps","state","firestore","ordered"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,CAEA,OACEC,KADF,CAEEC,SAFF,CAGEC,QAHF,CAIEC,WAJF,CAKEC,SALF,CAMEC,SANF,KAOO,yBAPP,CAQA,OAASC,OAAT,KAAwB,aAAxB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACxB,mBACE,aAAK,SAAS,CAAE,WAAhB,wBACE,KAAC,MAAD,wBACE,KAAC,UAAD,EAAY,KAAK,CAAC,gBAAlB,uBACE,MAAC,KAAD,yBACE,KAAC,SAAD,wBACE,MAAC,QAAD,yBACE,KAAC,WAAD,wBACE,6CADF,EADF,cAIE,KAAC,WAAD,wBACE,8BADF,EAJF,GADF,EADF,cAWE,KAAC,SAAD,WACGA,KAAK,CAACC,WAAN,CACGD,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,GAAD,CAAMC,CAAN,CAAY,CAChC,mBACE,MAAC,QAAD,yBACE,KAAC,SAAD,WAAYD,GAAG,CAACE,EAAhB,EADF,cAEE,KAAC,SAAD,uBAFF,GAAeD,CAAf,CADF,CAMD,CAPD,CADH,CASG,IAVN,EAXF,GADF,EADF,EADF,cA8BE,KAAC,MAAD,wBACE,KAAC,UAAD,EAAY,KAAK,CAAC,eAAlB,uBACE,MAAC,KAAD,yBACE,KAAC,SAAD,wBACE,MAAC,QAAD,yBACE,KAAC,WAAD,wBACE,iCADF,EADF,cAIE,KAAC,WAAD,wBACE,8BADF,EAJF,cAOE,KAAC,WAAD,wBACE,2CADF,EAPF,GADF,EADF,cAcE,KAAC,SAAD,WACGJ,KAAK,CAACM,QAAN,CACGN,KAAK,CAACM,QAAN,CAAeJ,GAAf,CAAmB,SAACC,GAAD,CAAMC,CAAN,CAAY,CAC7B,mBACE,MAAC,QAAD,yBACE,KAAC,SAAD,WAAYD,GAAG,CAACE,EAAhB,EADF,cAEE,MAAC,SAAD,gBAAaF,GAAG,CAACI,MAAjB,OAFF,cAGE,KAAC,SAAD,WAAYJ,GAAG,CAACK,SAAJ,CAAcC,QAAd,EAAZ,EAHF,GAAeL,CAAf,CADF,CAOD,CARD,CADH,CAUG,IAXN,EAdF,GADF,EADF,EA9BF,GADF,CAiED,CAED,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,MAAO,CACLL,QAAQ,CAAEK,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBP,QAD7B,CAELL,WAAW,CAAEU,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBZ,WAFhC,CAAP,CAID,CALD,CAOA,cAAeH,CAAAA,OAAO,CAACY,YAAD,CAAP,CAAsBX,SAAtB,CAAf","sourcesContent":["import React from \"react\";\nimport SimpleCard from \"./../components/SimpleCard/SimpleCard\";\nimport Layout from \"./../components/Layout/Layout\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from \"carbon-components-react\";\nimport { connect } from \"react-redux\";\n\nfunction Dashboard(props) {\n  return (\n    <div className={\"dashboard\"}>\n      <Layout>\n        <SimpleCard title=\"WA Connections\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>\n                  <h5>Available Connections</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Status</h5>\n                </TableHeader>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.connections\n                ? props.connections.map((elm, i) => {\n                    return (\n                      <TableRow key={i}>\n                        <TableCell>{elm.id}</TableCell>\n                        <TableCell> Online </TableCell>\n                      </TableRow>\n                    );\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </SimpleCard>\n      </Layout>\n\n      <Layout>\n        <SimpleCard title=\"Contact lists\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>\n                  <h5>List name</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Length</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Available variables</h5>\n                </TableHeader>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.contacts\n                ? props.contacts.map((elm, i) => {\n                    return (\n                      <TableRow key={i}>\n                        <TableCell>{elm.id}</TableCell>\n                        <TableCell> {elm.length} </TableCell>\n                        <TableCell>{elm.variables.toString()}</TableCell>\n                      </TableRow>\n                    );\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </SimpleCard>\n      </Layout>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n  };\n};\n\nexport default connect(stateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}