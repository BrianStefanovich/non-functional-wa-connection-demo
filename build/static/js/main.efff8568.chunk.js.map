{"version":3,"sources":["components/Header/Header.js","store/actions/SideNavActions.js","components/SideBar/SideBar.js","components/SimpleCard/SimpleCard.js","components/Layout/Layout.js","pages/Dashboard.js","pages/Login.js","pages/ConnectionStatus.js","pages/ContactStatus.js","store/actions/TextNessageVariantAction.js","components/TextEditor/TextEditor.js","store/actions/MediaMessageVariantAction.js","components/AddTextEditor/AddTextEditor.js","components/SelectConnection/SelectConnection.js","pages/SendTextMessage.js","components/MediaGadget/MediaGadget.js","pages/SendMediaMessage.js","pages/CreateNewConnection.js","pages/CreateNewContact.js","App.js","store/reducers/TextMessageVariantReducer.js","store/reducers/MediaMessageVariantReducer.js","store/reducers/SideNavReducer.js","store/rootReducer.js",".env.js","index.js"],"names":["MainHeader","history","useHistory","firebase","useFirebase","useState","isGlobalBarOpen","setIsGlobalBarOpen","toggleGlobalBar","Header","aria-label","SkipToContent","HeaderName","href","prefix","width","height","viewBox","fill","xmlns","fill-rule","clip-rule","d","id","mask-type","maskUnits","x","y","mask","cx","cy","r","gradientUnits","gradientTransform","stop-color","offset","stop-opacity","HeaderGlobalBar","HeaderGlobalAction","onClick","HeaderPanel","expanded","Switcher","SwitcherItem","auth","signOut","then","push","changeNav","newTab","type","data","connect","state","uid","isLoggedIn","isEmpty","connections","firestore","ordered","contacts","sideNav","activeTab","dispatch","changeTab","props","redirect","path","useFirestoreConnect","collection","doc","subcollections","storeAs","SideNav","isFixedNav","isChildOfHeader","SideNavItems","SideNavLink","isActive","renderIcon","Dashboard16","Toolbar","ClosedCaptionAlt16","Image16","console","log","SideNavMenu","EventSchedule16","title","SideNavMenuItem","Network_416","map","elm","i","EventsAlt16","SimpleCard","className","Grid","Row","Column","children","Layout","col","first","second","Table","TableHead","TableRow","TableHeader","TableBody","TableCell","length","variables","toString","Login","loginState","setLoginState","email","setEmail","password","setPassword","emailWarn","setEmailWarn","emailWarnText","setEmailWarnText","passwordWarn","passwordWarnText","handleClick","value","handleMailWarn","text","Modal","shouldSubmitOnEnter","hasForm","onRequestSubmit","open","modalHeading","primaryButtonText","Link","kind","TextInput","onChange","e","target","labelText","placeholder","secondaryButtonText","onSecondarySubmit","signInWithEmailAndPassword","catch","err","message","PasswordInput","warn","warnText","sendPasswordResetEmail","Loading","active","token","profile","useParams","connection","find","user","name","jid","phone","device_manufacturer","device_model","mcc","mnc","os_build_number","os_version","wa_version","src","imgUrl","style","alt","Button","TrashCan16","fetch","method","body","JSON","stringify","connectionName","headers","res","json","contact","contactName","CreateVariant","variant","DeleteVariant","reduceSlate","lastIndex","reduce","accumulator","currentValue","index","textReducer","bold","italic","code","overline","textMessageVariants","createVariant","deleteVariant","deleteAll","editor","useMemo","withReact","createEditor","emoji","setEmoji","toggleEmoji","DefaultElement","attributes","renderElement","useCallback","element","Leaf","leaf","addText","Transforms","insertText","renderLeaf","ToolBar","Dropdown","selectedItem","size","items","titleText","TextBold32","hasIconOnly","iconDescription","Editor","nodes","match","n","setNodes","Text","isText","split","TextItalic32","TextStrikethrough32","Code32","FaceSatisfied32","perLine","showPreview","native","textState","newValue","editVariant","editorIndex","TrashCan32","SetActiveVariant","createTextVariant","CreateTextVariant","createMediaVariant","CreateMediaVariant","messageType","Add32","marginBottom","Select","handleSelectConnection","defaultValue","hideLabel","SelectItem","disabled","hidden","handleSelectContact","cooldown","handleSelectCooldown","editorData","EditVariant","setActiveVariant","useEffect","database","selectedConnection","setSelectedConnection","selectedContact","setSelectedContact","selectedCooldown","setSelectedCooldown","contactsInterval","setContactsInterval","loading","setLoading","sendStatus","setSendStaus","dispatchStatus","setDispatchStatus","setContact","messageAmount","Math","floor","parseInt","messageQuant","messageReminder","tmpInterval","lastSuperior","calcContactsInterval","a","tmpContact","db","ref","remove","on","exists","val","deleteDB","sendMessages","tmpVariants","variants","currentUser","getIdTokenResult","tmpToken","contactId","connectionId","isFirst","passiveModal","onRequestClose","InlineLoading","status","description","receiverNumber","Tile","marginTop","Send16","setMediaPath","SetMediaPath","setMediaType","setStatus","image","setImage","audio","setAudio","video","setVideo","document","setDocument","fileName","setFileName","isOn","setWarn","handleFile","evt","addedFiles","file","MBSize","correctFormat","upload","uploadFile","setAddText","setSendMessage","URL","createObjectURL","deleteVideo","storage","delete","deleteAudio","deleteImage","deleteDocument","FileUploaderItem","onDelete","loop","controls","withOverlay","FileUploaderDropContainer","onAddFiles","accept","mediaMessageVariants","useRef","sendMessasges","setSendMessages","toggleDispatch","fireWall","getIdToken","isLast","setName","qr","setQr","createConnection","qrCode","setConnectionState","mode","handleModalClose","connectionState","display","justifyContent","fileStatus","setFileStatus","files","FileUploader","filenameStatus","buttonLabel","to","Content","initState","textMessageVariantReducer","action","tmp","concat","filter","mediaMessageVariantReducer","mediaPath","mediaType","sideNavReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","fbConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","rrfProps","config","userProfile","enableClaims","createFirestoreInstance","useFirestoreForProfile","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.efff8568.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { AppSwitcher20 } from \"@carbon/icons-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFirebase } from \"react-redux-firebase\";\n\nimport {\n  Header,\n  HeaderName,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  HeaderPanel,\n  Switcher,\n  SwitcherItem,\n} from \"carbon-components-react\";\n\nfunction MainHeader() {\n  const history = useHistory();\n  const firebase = useFirebase();\n  const [isGlobalBarOpen, setIsGlobalBarOpen] = useState(false);\n\n  const toggleGlobalBar = () => {\n    setIsGlobalBarOpen(!isGlobalBarOpen);\n  };\n\n  const handleLogOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        toggleGlobalBar();\n        history.push(\"/login\");\n      });\n  };\n\n  return (\n    <Header aria-label=\"Connectivity's\">\n      <SkipToContent />\n      <HeaderName href=\"/\" prefix=\"\">\n        <svg\n          width=\"40\"\n          height=\"40\"\n          viewBox=\"0 0 565 562\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M199.656 364.587C174.662 339.593 174.662 299.071 199.656 274.077C214.802 258.931 235.652 252.963 255.292 256.175C283.356 257.469 311.515 247.071 332.945 225.64C361.21 197.376 358.444 155.358 358.444 121.181C358.444 87.0043 362.893 55.686 387.393 31.186C427.812 -9.23323 493.344 -9.23323 533.764 31.186C574.183 71.6053 574.183 137.138 533.764 177.557C509.922 201.399 487.231 206.892 446.333 206.892C405.434 206.892 367.735 202.165 338.602 231.297C317.172 252.727 307.104 281.217 308.398 309.281C309.693 337.344 305.312 349.44 290.165 364.587C265.172 389.58 224.649 389.58 199.656 364.587Z\"\n            fill=\"#F5F5F5\"\n          />\n          <path\n            d=\"M59.7802 255.748C45.0113 256.835 30.5479 263.026 19.2548 274.319C-5.73872 299.312 -5.73872 339.835 19.2548 364.828C32.0219 377.595 48.8409 383.841 65.5723 383.565L65.3886 383.749C93.7247 385.884 121.449 397.726 142.999 419.276C164.883 441.16 176.756 469.413 178.618 498.207L178.702 498.124C178.792 514.383 185.04 530.614 197.446 543.019C222.439 568.013 262.962 568.013 287.955 543.019C312.949 518.026 312.949 477.503 287.955 452.51C280.312 444.866 272.399 440.489 261.557 436.592C250.715 432.695 197.916 426.109 173.758 401.952C127.481 355.674 127.481 280.644 173.758 234.367C198.544 209.581 250.832 204.669 264.028 199.836C277.223 195.002 283.046 191.547 290.784 183.809C315.777 158.816 315.777 118.293 290.784 93.2994C265.79 68.3059 225.268 68.3059 200.274 93.2994C188.981 104.593 182.791 119.056 181.703 133.825C181.471 165.042 169.512 196.186 145.827 219.872C122.142 243.557 90.9976 255.515 59.7802 255.748Z\"\n            fill=\"#F5F5F5\"\n          />\n          <mask\n            id=\"mask0\"\n            mask-type=\"alpha\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"358\"\n            y=\"1\"\n            width=\"201\"\n            height=\"203\"\n          >\n            <path\n              d=\"M458.5 0.999996C514.005 0.999998 559 46.4929 559 101.998V101.998C559 158.054 513.557 204 457.5 204L358 204L358 101.5C358 45.9954 402.995 0.999993 458.5 0.999996V0.999996Z\"\n              fill=\"url(#paint0_radial)\"\n            />\n          </mask>\n          <g mask=\"url(#mask0)\">\n            <path\n              d=\"M461.879 9.59603C514.718 9.59604 557.551 52.4297 557.551 105.268V105.268C557.551 158.106 514.717 200.94 461.879 200.94L366.208 200.94L366.208 105.268C366.208 52.4297 409.041 9.59603 461.879 9.59603V9.59603Z\"\n              fill=\"#14FF00\"\n            />\n          </g>\n          <path\n            d=\"M397 165L405.758 132.902C400.354 123.506 397.514 112.855 397.519 101.933C397.535 67.7869 425.23 40.0005 459.26 40.0005C475.773 40.0057 491.274 46.4588 502.934 58.1672C514.589 69.8755 521.005 85.438 521 101.99C520.984 136.141 493.289 163.928 459.26 163.928C448.929 163.922 438.749 161.323 429.731 156.386L397 165ZM431.247 145.172C439.948 150.355 448.254 153.459 459.239 153.464C487.521 153.464 510.56 130.37 510.576 101.98C510.586 73.5317 487.656 50.4692 459.28 50.4588C430.977 50.4588 407.954 73.5526 407.943 101.938C407.938 113.527 411.323 122.204 417.007 131.282L411.821 150.282L431.247 145.172ZM490.361 116.714C489.977 116.068 488.949 115.683 487.402 114.907C485.86 114.131 478.275 110.386 476.858 109.87C475.446 109.355 474.418 109.094 473.385 110.646C472.357 112.193 469.398 115.683 468.5 116.714C467.602 117.745 466.699 117.875 465.157 117.099C463.615 116.323 458.642 114.693 452.75 109.417C448.166 105.313 445.066 100.245 444.168 98.6932C443.27 97.1463 444.075 96.3078 444.843 95.537C445.539 94.8442 446.385 93.7297 447.159 92.8234C447.942 91.9276 448.197 91.2817 448.716 90.2453C449.23 89.214 448.976 88.3078 448.586 87.5317C448.197 86.7609 445.113 79.1411 443.831 76.0422C442.575 73.0265 441.303 73.4328 440.358 73.3859L437.399 73.3338C436.371 73.3338 434.699 73.7192 433.287 75.2713C431.875 76.8234 427.888 80.563 427.888 88.1828C427.888 95.8026 433.417 103.162 434.185 104.193C434.959 105.224 445.061 120.86 460.537 127.563C464.217 129.157 467.093 130.11 469.331 130.823C473.027 132 476.391 131.834 479.049 131.438C482.013 130.995 488.175 127.693 489.463 124.079C490.75 120.459 490.75 117.36 490.361 116.714Z\"\n            fill=\"#333333\"\n          />\n          <defs>\n            <radialGradient\n              id=\"paint0_radial\"\n              cx=\"0\"\n              cy=\"0\"\n              r=\"1\"\n              gradientUnits=\"userSpaceOnUse\"\n              gradientTransform=\"translate(458.5 102.5) rotate(-180) scale(100.5 101.5)\"\n            >\n              <stop stop-color=\"#14FF00\" />\n              <stop\n                offset=\"0.0001\"\n                stop-color=\"#14FF00\"\n                stop-opacity=\"0.927083\"\n              />\n              <stop offset=\"0.9999\" stop-color=\"#14FF00\" stop-opacity=\"0\" />\n              <stop offset=\"1\" stop-color=\"#14FF00\" stop-opacity=\"0\" />\n            </radialGradient>\n          </defs>\n        </svg>\n        Connectivity's - WA Connection\n      </HeaderName>\n      <HeaderGlobalBar>\n        <HeaderGlobalAction aria-label=\"User Avatar\" onClick={toggleGlobalBar}>\n          <AppSwitcher20 />\n        </HeaderGlobalAction>\n      </HeaderGlobalBar>\n      <HeaderPanel expanded={isGlobalBarOpen}>\n        <Switcher aria-label=\"Switcher Container\">\n          <SwitcherItem onClick={handleLogOut} aria-label=\"Log out\">\n            Log out\n          </SwitcherItem>\n        </Switcher>\n      </HeaderPanel>\n    </Header>\n  );\n}\n\nexport default MainHeader;\n","export function changeNav(newTab) {\n  return {\n    type: \"CHANGE\",\n    data: `${newTab}`,\n  };\n}\n","import {\n  SideNav,\n  SideNavItems,\n  SideNavLink,\n  SideNavMenu,\n  SideNavMenuItem,\n  ToolbarDivider,\n} from \"carbon-components-react\";\n\nimport { changeNav } from \"./../../store/actions/SideNavActions\";\n\nimport {\n  Dashboard16,\n  ClosedCaptionAlt16,\n  Network_416,\n  Image16,\n  EventSchedule16,\n  EventsAlt16,\n} from \"@carbon/icons-react\";\n\nimport React, { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nfunction SideBar(props) {\n  const history = useHistory();\n\n  const redirect = (path) => {\n    history.push(`${path}`);\n  };\n\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: props.uid || \"lala\",\n      subcollections: [{ collection: \"credentials\" }],\n      storeAs: \"connections\",\n    },\n    {\n      collection: \"user\",\n      doc: props.uid || \"lala\",\n      subcollections: [{ collection: \"contacts\" }],\n      storeAs: \"contacts\",\n    },\n  ]);\n\n  return (\n    <Fragment>\n      <SideNav\n        isFixedNav\n        expanded={true}\n        isChildOfHeader={false}\n        aria-label=\"Side navigation\"\n      >\n        <SideNavItems>\n          <SideNavLink\n            isActive={props.sideNav === \"dashboard\"}\n            renderIcon={Dashboard16}\n            onClick={() => {\n              props.changeTab(\"dashboard\");\n              redirect(\"/app/dashboard\");\n            }}\n          >\n            Dashboard\n          </SideNavLink>\n          <ToolbarDivider />\n          <SideNavLink\n            renderIcon={ClosedCaptionAlt16}\n            isActive={props.sideNav === \"send-text-message\"}\n            onClick={() => {\n              props.changeTab(\"send-text-message\");\n              redirect(\"/app/send-text-message\");\n            }}\n          >\n            Send text messages\n          </SideNavLink>\n          <SideNavLink\n            isActive={props.sideNav === \"send-media-message\"}\n            renderIcon={Image16}\n            onClick={() => {\n              console.log(\"Closed feature\");\n              props.changeTab(\"send-media-message\");\n              redirect(\"/app/send-media-message\");\n            }}\n          >\n            Send media messages\n          </SideNavLink>\n\n          <ToolbarDivider />\n\n          <SideNavMenu renderIcon={EventSchedule16} title=\"Campaigns\">\n            <SideNavMenuItem>Create new campaign</SideNavMenuItem>\n          </SideNavMenu>\n\n          <ToolbarDivider />\n\n          <SideNavMenu\n            title=\"WA - Connections\"\n            isActive={false}\n            renderIcon={Network_416}\n          >\n            {props.connections\n              ? props.connections.map((elm, i) => {\n                  return (\n                    <SideNavMenuItem\n                      key={i}\n                      isActive={props.sideNav === `connection-status/${elm.id}`}\n                      onClick={() => {\n                        props.changeTab(`connection-status/${elm.id}`);\n                        redirect(`/app/connection-status/${elm.id}`);\n                      }}\n                    >\n                      {elm.id}\n                    </SideNavMenuItem>\n                  );\n                })\n              : \"\"}\n            <SideNavMenuItem\n              isActive={props.sideNav === `create-new-connection`}\n              onClick={() => {\n                redirect(`/app/create-new-connection`);\n                props.changeTab(`create-new-connection`);\n              }}\n            >\n              Create new connection\n            </SideNavMenuItem>\n          </SideNavMenu>\n\n          <SideNavMenu title=\"Contact lists\" renderIcon={EventsAlt16}>\n            {props.contacts\n              ? props.contacts.map((elm, i) => {\n                  return (\n                    <SideNavMenuItem\n                      key={i}\n                      isActive={props.sideNav === `contact-status/${elm.id}`}\n                      onClick={() => {\n                        props.changeTab(`contact-status/${elm.id}`);\n                        redirect(`/app/contact-status/${elm.id}`);\n                      }}\n                    >\n                      {elm.id}\n                    </SideNavMenuItem>\n                  );\n                })\n              : \"\"}\n            <SideNavMenuItem\n              isActive={props.sideNav === `create-new-contact`}\n              onClick={() => {\n                redirect(`/app/create-new-contact`);\n                props.changeTab(`create-new-contact`);\n              }}\n            >\n              Create new contact list\n            </SideNavMenuItem>\n          </SideNavMenu>\n        </SideNavItems>\n      </SideNav>\n    </Fragment>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    isLoggedIn: state.firebase.auth.isEmpty,\n    connections: state.firestore.ordered.connections,\n    contacts: state.firestore.ordered.contacts,\n    sideNav: state.sideNav.activeTab,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeTab: (newTab) => {\n      dispatch(changeNav(newTab));\n    },\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(SideBar);\n","import React from \"react\";\nimport { Grid, Row, Column } from \"carbon-components-react\";\n\nexport default function SimpleCard(props) {\n  return (\n    <div className=\"SimpleCard\">\n      <Grid>\n        <Row>\n          <Column>\n            <h2 className={\"title\"}>{props.title}</h2>\n            {props.children}\n          </Column>\n        </Row>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid, Row, Column } from \"carbon-components-react\";\n\nexport default function Layout(props) {\n  if (props.col > 1) {\n    return (\n      <Grid>\n        <Row>\n          <Column>{props.first}</Column>\n          <Column>{props.second}</Column>\n        </Row>\n      </Grid>\n    );\n  } else {\n    return (\n      <Grid>\n        <Row>\n          <Column>{props.children}</Column>\n        </Row>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport SimpleCard from \"./../components/SimpleCard/SimpleCard\";\nimport Layout from \"./../components/Layout/Layout\";\n\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from \"carbon-components-react\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nfunction Dashboard(props) {\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"contacts\" }],\n      storeAs: \"contacts\",\n    },\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"credentials\" }],\n      storeAs: \"connections\",\n    },\n  ]);\n\n  return (\n    <div className={\"dashboard\"}>\n      <Layout>\n        <SimpleCard title=\"WA Connections\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>\n                  <h5>Available Connections</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Status</h5>\n                </TableHeader>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.connections\n                ? props.connections.map((elm, i) => {\n                    return (\n                      <TableRow key={i}>\n                        <TableCell>{elm.id}</TableCell>\n                        <TableCell> Online </TableCell>\n                      </TableRow>\n                    );\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </SimpleCard>\n      </Layout>\n\n      <Layout>\n        <SimpleCard title=\"Contact lists\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>\n                  <h5>List name</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Length</h5>\n                </TableHeader>\n                <TableHeader>\n                  <h5>Available variables</h5>\n                </TableHeader>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.contacts\n                ? props.contacts.map((elm, i) => {\n                    return (\n                      <TableRow key={i}>\n                        <TableCell>{elm.id}</TableCell>\n                        <TableCell> {elm.length} </TableCell>\n                        <TableCell>{elm.variables.toString()}</TableCell>\n                      </TableRow>\n                    );\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </SimpleCard>\n      </Layout>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n    uid: state.firebase.auth.uid,\n  };\n};\n\nexport default connect(stateToProps)(Dashboard);\n","import React, { useState } from \"react\";\nimport {\n  Modal,\n  TextInput,\n  Link,\n  Loading,\n  InlineNotification,\n} from \"carbon-components-react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login(props) {\n  const firebase = useFirebase();\n  const history = useHistory();\n\n  const [loginState, setLoginState] = useState(\"login\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [emailWarn, setEmailWarn] = useState(false);\n  const [emailWarnText, setEmailWarnText] = useState(\"\");\n\n  const [passwordWarn, setPasswordWarn] = useState(false);\n  const [passwordWarnText, setPasswordWarnText] = useState(\"\");\n\n  const handleMail = (e) => {\n    setEmailWarn(false);\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleClick = (value) => {\n    setLoginState(value);\n  };\n\n  const handleMailWarn = (text) => {\n    setEmailWarn(true);\n    setEmailWarnText(text);\n  };\n\n  const handleResetPassword = () => {\n    setLoginState(\"loading\");\n    firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setLoginState(\"reset\");\n      });\n  };\n\n  switch (loginState) {\n    case \"login\":\n      return (\n        <Modal\n          shouldSubmitOnEnter\n          hasForm\n          onRequestSubmit={() => {\n            if (email === \"\") {\n              handleMailWarn(\"Your mail cannot be empty\");\n            } else {\n              handleClick(\"password\");\n            }\n          }}\n          open\n          modalHeading={<h2> Login</h2>}\n          primaryButtonText=\"Login\"\n        >\n          <p>Don't have an account yet? </p>{\" \"}\n          <Link> Create my Connectivity's account</Link>\n          <br />\n          {emailWarn ? (\n            <InlineNotification title={emailWarnText} kind=\"warning\" />\n          ) : null}\n          <br />\n          <TextInput\n            onChange={handleMail}\n            labelText=\"eMail\"\n            placeholder={\"your@email.com\"}\n            value={email !== \"\" ? email : null}\n          />\n        </Modal>\n      );\n\n    case \"password\":\n      return (\n        <Modal\n          open\n          hasForm\n          shouldSubmitOnEnter\n          modalHeading={<h2> Login</h2>}\n          primaryButtonText=\"Login\"\n          secondaryButtonText=\"Back\"\n          onSecondarySubmit={() => handleClick(\"login\")}\n          onRequestSubmit={() => {\n            setLoginState(\"loading\");\n            firebase\n              .auth()\n              .signInWithEmailAndPassword(email, password)\n              .then(() => {\n                history.push(\"/app\");\n              })\n              .catch((err) => {\n                handleMailWarn(err.message);\n                setLoginState(\"login\");\n              });\n          }}\n        >\n          <p>Login with {email} account </p>\n          <br />\n          <br />\n          <TextInput.PasswordInput\n            onChange={handlePassword}\n            id=\"password\"\n            labelText=\"Password\"\n            warn={passwordWarn}\n            warnText={passwordWarnText}\n          />\n          <Link onClick={handleResetPassword}> Forgot my password </Link>\n        </Modal>\n      );\n\n    case \"loading\":\n      return <Loading active />;\n\n    case \"reset\":\n      return (\n        <Modal\n          open\n          shouldSubmitOnEnter\n          modalHeading={<h2> Login</h2>}\n          primaryButtonText=\"Login\"\n          secondaryButtonText=\"Back\"\n          onRequestSubmit={() => setLoginState(\"login\")}\n          onSecondarySubmit={() => setLoginState(\"login\")}\n        >\n          <p>\n            We've sent an email to {email} to reset your password. Check your\n            spam folder if the mail doesn't appear{\" \"}\n          </p>\n          <br />\n          <br />\n        </Modal>\n      );\n  }\n}\n","import React from \"react\";\nimport Layout from \"./../components/Layout/Layout\";\nimport SimpleCard from \"./../components/SimpleCard/SimpleCard\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button,\n  Loading,\n} from \"carbon-components-react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nimport { TrashCan16 } from \"@carbon/icons-react\";\n\nfunction ConnectionStatus(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const uid = props.uid;\n\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: uid,\n      subcollections: [{ collection: \"credentials\" }],\n      storeAs: \"connections\",\n    },\n  ]);\n\n  const connection = props.connections.find((elm) => {\n    return elm.id === id;\n  });\n\n  const deleteConnection = () => {\n    fetch(\n      \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/deleteConnection/\",\n      {\n        method: \"POST\", // or 'PUT'\n        body: JSON.stringify({\n          uid: props.uid,\n          connectionName: connection.id,\n          token: props.token,\n        }), // data can be `string` or {object}!\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then(history.push(\"/app/dashboard\"))\n      .catch(() => {\n        history.push(\"/app/dashboard\");\n      });\n  };\n\n  if (connection.user) {\n    return (\n      <div className=\"connection-status\">\n        <SimpleCard title={connection.id}>\n          <Layout\n            col={2}\n            first={\n              <Table>\n                <TableHead>\n                  <TableHeader>\n                    <h3>Connection's Info</h3>\n                  </TableHeader>\n                </TableHead>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Name: {connection.user.name}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>JID: {connection.user.jid}</TableCell>\n                  </TableRow>\n                </TableBody>\n\n                <TableHead>\n                  <TableHeader>\n                    <h3>Device Info</h3>\n                  </TableHeader>\n                </TableHead>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell>\n                      Device manufacurer:\n                      {connection.user.phone.device_manufacturer}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      Device model: {connection.user.phone.device_model}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>MCC: {connection.user.phone.mcc}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>MNC: {connection.user.phone.mnc}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      OS build number: {connection.user.phone.os_build_number}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      OS version: {connection.user.phone.os_version}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      WA version: {connection.user.phone.wa_version}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            }\n            second={\n              <img\n                src={`${connection.user.imgUrl}`}\n                style={{ width: \"100%\" }}\n                alt=\"Profile associated with this wa account\"\n              />\n            }\n          />\n        </SimpleCard>\n        <Button\n          kind=\"danger\"\n          renderIcon={TrashCan16}\n          onClick={deleteConnection}\n        >\n          Delete connection\n        </Button>\n      </div>\n    );\n  } else {\n    return <Loading />;\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    connections: state.firestore.ordered.connections,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nexport default connect(stateToProps)(ConnectionStatus);\n","import React from \"react\";\nimport Layout from \"./../components/Layout/Layout\";\nimport SimpleCard from \"./../components/SimpleCard/SimpleCard\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button,\n} from \"carbon-components-react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { TrashCan16 } from \"@carbon/icons-react\";\n\nfunction ContactStatus(props) {\n  const { id } = useParams();\n  const uid = props.uid;\n\n  const history = useHistory();\n\n  const deleteContact = () => {\n    fetch(\n      \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/deleteContact/\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          uid: props.uid,\n          contactName: id,\n          token: props.token,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then(history.push(\"/app/dashboard\"))\n      .catch(() => {\n        history.push(\"/app/dashboard\");\n      });\n  };\n\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: uid,\n      subcollections: [{ collection: \"contacts\" }],\n      storeAs: \"contacts\",\n    },\n  ]);\n\n  const contact = props.contacts.find((elm) => {\n    return elm.id === id;\n  });\n\n  return (\n    <div className=\"contact-status\">\n      <SimpleCard title={contact.id}>\n        <Layout\n          col={2}\n          first={\n            <div>\n              <p>\n                This is a list with all your contact’s available variables. To\n                call them in the message, just type it’s name inside curly\n                braces.\n              </p>\n              <br />\n              <br />\n              <p>\n                If you call a variable that doesn’t exists, “undefined” is going\n                to appear on its place in the message.\n              </p>\n            </div>\n          }\n          second={\n            <Table>\n              <TableHead>\n                <TableHeader>\n                  <h3>Available variables</h3>\n                </TableHeader>\n              </TableHead>\n\n              <TableBody>\n                {contact.variables.map((elm, i) => {\n                  return (\n                    <TableRow key={i}>\n                      <TableCell> {`{ ${elm} }`}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n\n              <TableHead>\n                <TableHeader>\n                  <h3>Contacts Available</h3>\n                </TableHeader>\n              </TableHead>\n\n              <TableBody>\n                <TableRow>\n                  <TableCell> {contact.length} contacts </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          }\n        />\n        <Button onClick={deleteContact} kind=\"danger\" renderIcon={TrashCan16}>\n          Delete contact list\n        </Button>\n      </SimpleCard>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    contacts: state.firestore.ordered.contacts,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nexport default connect(stateToProps)(ContactStatus);\n","export function CreateVariant(variant) {\n  return {\n    type: \"CREATE_TEXT\",\n    data: variant,\n  };\n}\n\nexport function DeleteAll() {\n  return {\n    type: \"DELETE_ALL_TEXT\",\n  };\n}\n\nexport function EditVariant(index, editorData) {\n  return {\n    type: \"EDIT_TEXT\",\n    data: {\n      index: index,\n      body: editorData.body,\n      textState: editorData.textState,\n    },\n  };\n}\n\nexport function DeleteVariant(id) {\n  return {\n    type: \"DELETE_TEXT\",\n    data: id,\n  };\n}\n\nexport function SetActiveVariant(id) {\n  return {\n    type: \"SET_TEXT_ACTIVE\",\n    data: id,\n  };\n}\n","import React, { useMemo, useState, useCallback } from \"react\";\nimport { createEditor, Transforms, Editor, Text } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport {\n  TextBold32,\n  TextItalic32,\n  TextStrikethrough32,\n  Code32,\n  FaceSatisfied32,\n  TrashCan32,\n} from \"@carbon/icons-react\";\nimport { Button, Dropdown } from \"carbon-components-react\";\nimport { connect } from \"react-redux\";\nimport {\n  CreateVariant,\n  DeleteVariant,\n  EditVariant,\n  DeleteAll,\n} from \"./../../store/actions/TextNessageVariantAction\";\n\nfunction reduceSlate(value) {\n  const lastIndex = value.length - 1;\n  const paragraphReducer = (accumulator, currentValue, index) => {\n    const textReducer = (accumulator, currentValue) => {\n      if (currentValue.bold) {\n        if (currentValue.text !== \"\") {\n          return `${accumulator} *${currentValue.text}*`;\n        } else {\n          return `${accumulator} ${currentValue.text}`;\n        }\n      } else if (currentValue.italic) {\n        if (currentValue.text !== \"\") {\n          return `${accumulator} _${currentValue.text}_`;\n        } else {\n          return `${accumulator} ${currentValue.text}`;\n        }\n      } else if (currentValue.code) {\n        if (currentValue.text !== \"\") {\n          return accumulator + \"```\" + currentValue.text + \"```\";\n        } else {\n          return `${accumulator} ${currentValue.text}`;\n        }\n      } else if (currentValue.overline) {\n        if (currentValue.text) {\n          return `${accumulator} ~${currentValue.text}~`;\n        } else {\n          return `${accumulator} ${currentValue.text}`;\n        }\n      } else {\n        return `${accumulator} ${currentValue.text}`;\n      }\n    };\n\n    if (index !== lastIndex) {\n      return (\n        accumulator + `${currentValue.children.reduce(textReducer, \"\")} \\n`\n      );\n    } else {\n      return accumulator + `${currentValue.children.reduce(textReducer, \"\")}`;\n    }\n  };\n  return value.reduce(paragraphReducer, \"\");\n}\n\nfunction TextEditor(props) {\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const [emoji, setEmoji] = useState(false);\n\n  const toggleEmoji = () => {\n    setEmoji(!emoji);\n  };\n\n  const DefaultElement = (props) => {\n    return <p {...props.attributes}>{props.children}</p>;\n  };\n\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  const Leaf = ({ attributes, children, leaf }) => {\n    if (leaf.bold) {\n      children = <strong>{children}</strong>;\n    }\n\n    if (leaf.code) {\n      children = <code>{children}</code>;\n    }\n\n    if (leaf.italic) {\n      children = <em>{children}</em>;\n    }\n\n    if (leaf.overline) {\n      children = <strike>{children}</strike>;\n    }\n\n    return <span {...attributes}>{children}</span>;\n  };\n\n  const addText = (text) => {\n    Transforms.insertText(editor, text);\n  };\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />;\n  }, []);\n\n  const ToolBar = () => {\n    return (\n      <div className=\"ToolBar\">\n        <Dropdown\n          onChange={(e) => addText(`{${e.selectedItem}}`)}\n          size=\"sm\"\n          type=\"inline\"\n          items={props.variables}\n          titleText=\"Variables\"\n        />\n        <Button\n          renderIcon={TextBold32}\n          kind=\"ghost\"\n          hasIconOnly\n          size={\"small\"}\n          iconDescription=\"Bold\"\n          onClick={() => {\n            const [match] = Editor.nodes(editor, {\n              match: (n) => n.bold,\n            });\n\n            Transforms.setNodes(\n              editor,\n              { bold: match ? false : true },\n              { match: (n) => Text.isText(n), split: true }\n            );\n          }}\n        />\n        <Button\n          renderIcon={TextItalic32}\n          kind=\"ghost\"\n          hasIconOnly\n          iconDescription=\"Italic\"\n          size={\"small\"}\n          onClick={() => {\n            const [match] = Editor.nodes(editor, {\n              match: (n) => n.italic,\n            });\n\n            Transforms.setNodes(\n              editor,\n              { italic: match ? false : true },\n              { match: (n) => Text.isText(n), split: true }\n            );\n          }}\n        />\n        <Button\n          renderIcon={TextStrikethrough32}\n          kind=\"ghost\"\n          hasIconOnly\n          iconDescription=\"Strike through\"\n          size={\"small\"}\n          onClick={() => {\n            const [match] = Editor.nodes(editor, {\n              match: (n) => n.overline,\n            });\n\n            Transforms.setNodes(\n              editor,\n              { overline: match ? false : true },\n              { match: (n) => Text.isText(n), split: true }\n            );\n          }}\n        />\n        <Button\n          renderIcon={Code32}\n          kind=\"ghost\"\n          hasIconOnly\n          iconDescription=\"Monospace\"\n          size={\"small\"}\n          onClick={() => {\n            const [match] = Editor.nodes(editor, {\n              match: (n) => n.code,\n            });\n\n            Transforms.setNodes(\n              editor,\n              { code: match ? false : true },\n              { match: (n) => Text.isText(n), split: true }\n            );\n          }}\n        />\n        {/*\n        <button\n          onClick={() => {\n            console.log(reduceSlate(value));\n          }}\n        >\n          Reduce\n        </button>\n\n\n        <select onChange={(e) => addText(e.target.value)}>\n          <option value=\"{opt1}\">Opt1</option>\n          <option value=\"{opt2}\">Opt2</option>\n          <option value=\"{opt3}\">Opt3</option>\n        </select>\n\t*/}\n        <Button\n          renderIcon={FaceSatisfied32}\n          kind=\"ghost\"\n          iconDescription=\"Emoji\"\n          hasIconOnly\n          size={\"small\"}\n          onClick={toggleEmoji}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"TextEditor\">\n      {props.open ? <ToolBar /> : null}\n      <div className=\"EmojiPicker\">\n        {emoji ? (\n          <Picker\n            title=\"Connectivity's\"\n            perLine={8}\n            showPreview={false}\n            onClick={(emoji) => {\n              addText(emoji.native);\n            }}\n          />\n        ) : null}\n      </div>\n\n      <div className=\"Main\">\n        <Slate\n          editor={editor}\n          value={props.textState}\n          onChange={(newValue) => {\n            props.editVariant(props.editorIndex, {\n              body: reduceSlate(newValue),\n              textState: newValue,\n            });\n          }}\n        >\n          <Editable renderElement={renderElement} renderLeaf={renderLeaf} />\n        </Slate>\n        {props.open ? null : (\n          <Button\n            className=\"DeleteButton\"\n            hasIconOnly\n            renderIcon={TrashCan32}\n            onClick={() => {\n              console.log(props.editorIndex);\n              props.deleteVariant(props.editorIndex);\n            }}\n            kind={\"secondary\"}\n            iconDescription=\"Delete this variant\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    textMessageVariants: state.textMessageVariants,\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n    uid: state.firebase.auth.uid,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    createVariant: (elm) => dispatch(CreateVariant(elm)),\n    deleteVariant: (elm) => dispatch(DeleteVariant(elm)),\n    deleteAll: () => dispatch(DeleteAll()),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(TextEditor);\n","export function CreateVariant(variant) {\n  return {\n    type: \"CREATE_MEDIA_TEXT\",\n    data: variant,\n  };\n}\n\nexport function DeleteAll() {\n  return {\n    type: \"DELETE_ALL_MEDIA_TEXT\",\n  };\n}\n\nexport function EditVariant(index, editorData) {\n  return {\n    type: \"EDIT_MEDIA_TEXT\",\n    data: {\n      index: index,\n      body: editorData.body,\n      textState: editorData.textState,\n    },\n  };\n}\n\nexport function DeleteVariant(id) {\n  return {\n\t  type: \"DELETE_MEDIA_TEXT\",\n    data: id,\n  };\n}\n\nexport function SetMediaPath(path) {\n  return {\n    type: \"SET_MEDIA_PATH\",\n    data: path,\n  };\n}\n\nexport function SetMediaType(path) {\n  return {\n    type: \"SET_MEDIA_TYPE\",\n    data: path,\n  };\n}\n\nexport function SetActiveVariant(id) {\n  return {\n\t  type: \"SET_MEDIA_TEXT_ACTIVE\",\n    data: id,\n  };\n}\n","import React from \"react\";\nimport { Button } from \"carbon-components-react\";\nimport { Add32 } from \"@carbon/icons-react\";\nimport { connect } from \"react-redux\";\nimport { CreateVariant as CreateTextVariant } from \"./../../store/actions/TextNessageVariantAction\";\nimport { CreateVariant as CreateMediaVariant } from \"./../../store/actions/MediaMessageVariantAction\";\n\nfunction AddTextEditor(props) {\n  if (props.messageType === \"text\") {\n    return (\n      <div className=\"AddTextEditor\">\n        <Button\n          hasIconOnly\n          onClick={() =>\n            props.createTextVariant({\n              body: \"\",\n              textState: [\n                {\n                  type: \"paragraph\",\n                  children: [{ text: \"Write here your variant...\" }],\n                },\n              ],\n              active: true,\n            })\n          }\n          renderIcon={Add32}\n          kind={\"secondary\"}\n          iconDescription=\"Add new variant\"\n        />\n      </div>\n    );\n  }else if (props.messageType === \"media\") {\n    return (\n      <div className=\"AddTextEditor\">\n        <Button\n          hasIconOnly\n          onClick={() =>\n            props.createMediaVariant({\n              body: \"\",\n              textState: [\n                {\n                  type: \"paragraph\",\n                  children: [{ text: \"Write here your variant...\" }],\n                },\n              ],\n              active: true,\n            })\n          }\n          renderIcon={Add32}\n          kind={\"secondary\"}\n          iconDescription=\"Add new variant\"\n        />\n      </div>\n    );\n  }\n}\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    createTextVariant: (elm) => dispatch(CreateTextVariant(elm)),\n    createMediaVariant: (elm) => dispatch(CreateMediaVariant(elm)),\n  };\n};\n\nexport default connect(null, dispatchToProps)(AddTextEditor);\n","import React from \"react\";\nimport { Select, SelectItem, TextInput } from \"carbon-components-react\";\nimport { connect } from \"react-redux\";\n\nfunction SelectConnection(props) {\n  return (\n    <div className=\"SelectConnection\">\n      <div style={{ marginBottom: \"1em\" }}>\n        <Select\n          onChange={props.handleSelectConnection}\n          defaultValue=\"placeholder-item\"\n          hideLabel\n        >\n          <SelectItem\n            disabled\n            hidden\n            value=\"placeholder-item\"\n            text=\"Select a connection\"\n          />\n          {props.connections.map((elm, i) => {\n            return <SelectItem key={i} value={elm.id} text={elm.id} />;\n          })}\n        </Select>\n      </div>\n      <div>\n        <Select\n          onChange={props.handleSelectContact}\n          defaultValue=\"placeholder-item\"\n          hideLabel\n        >\n          <SelectItem\n            disabled\n            hidden\n            value=\"placeholder-item\"\n            text=\"Select a contact list\"\n          />\n\n          {props.contacts.map((elm, i) => {\n            return <SelectItem key={i} value={elm.id} text={elm.id} />;\n          })}\n        </Select>\n        <br />\n        <TextInput\n          type=\"number\"\n          value={props.cooldown}\n          onChange={props.handleSelectCooldown}\n          labelText=\"Cooldown (seconds)\"\n        />\n      </div>\n    </div>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n  };\n};\n\nexport default connect(stateToProps)(SelectConnection);\n","import React, { useState, useEffect } from \"react\";\nimport TextEditor from \"./../components/TextEditor/TextEditor\";\nimport AddTextEditor from \"./../components/AddTextEditor/AddTextEditor\";\nimport {\n  CreateVariant,\n  DeleteVariant,\n  EditVariant,\n  DeleteAll,\n  SetActiveVariant,\n} from \"./../store/actions/TextNessageVariantAction\";\nimport { changeNav } from \"./../store/actions/SideNavActions\";\nimport {\n  Loading,\n  Table,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableCell,\n  Button,\n  Modal,\n  TableBody,\n  InlineLoading,\n  ExpandableTile,\n  TileAboveTheFoldContent,\n} from \"carbon-components-react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect, useFirebase } from \"react-redux-firebase\";\nimport { Send16 } from \"@carbon/icons-react\";\nimport SelectConnection from \"./../components/SelectConnection/SelectConnection\";\n\nfunction SendTextMessage(props) {\n  useEffect(() => {\n    props.deleteAll();\n  }, []);\n\n  const history = useHistory();\n  const firebase = useFirebase();\n  const database = firebase.database();\n\n  const [selectedConnection, setSelectedConnection] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(\"\");\n  const [selectedCooldown, setSelectedCooldown] = useState(\"10\");\n  const [contactsInterval, setContactsInterval] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sendStatus, setSendStaus] = useState([]);\n  const [dispatchStatus, setDispatchStatus] = useState(false);\n\n  const [contact, setContact] = useState({\n    variables: [\"Contact list is not selected\"],\n  });\n\n  const calcContactsInterval = () => {\n    const messageAmount = Math.floor(290 / (2 + parseInt(selectedCooldown)));\n    console.log(\"Message amount: \", messageAmount);\n    console.log(\"Contact length: \", contact.length);\n\n    const messageQuant =\n      messageAmount > contact.length\n        ? 1\n        : Math.floor(contact.length / messageAmount);\n    const messageReminder =\n      messageAmount > contact.length\n        ? 0\n        : Math.floor(contact.length % messageAmount);\n    const count = 0;\n    let tmpInterval = [];\n    let lastSuperior = 0;\n\n    for (let i = 0; i < messageQuant; i++) {\n      if (messageAmount > contact.length) {\n        tmpInterval.push([0, contact.length]);\n      } else {\n        tmpInterval.push([i * messageAmount, (i + 1) * messageAmount]);\n      }\n      lastSuperior = (i + 1) * messageAmount;\n    }\n    if (messageReminder !== 0) {\n      tmpInterval.push([lastSuperior, lastSuperior + messageReminder]);\n    }\n    setContactsInterval(tmpInterval);\n    console.log(\"tmpInterval: \", tmpInterval);\n  };\n\n  useEffect(() => {\n    calcContactsInterval();\n  }, [contact, selectedCooldown, selectedConnection]);\n\n  const handleSelectConnection = (e) => {\n    setSelectedConnection(e.target.value);\n  };\n\n  const handleSelectCooldown = (e) => {\n    setSelectedCooldown(e.target.value);\n  };\n\n  const toggleDispatch = () => {\n    setDispatchStatus(!dispatchStatus);\n  };\n\n  const handleModalClose = () => {\n    deleteDB();\n    props.changeNav(\"dashboard\");\n    history.push(\"/app/dashboard\");\n  };\n\n  const handleSelectContact = async (e) => {\n    const tmpContact = props.contacts.find((elm) => {\n      return elm.id === e.target.value;\n    });\n\n    console.log(\"Contact!\", tmpContact);\n\n    setContact(tmpContact);\n    setSelectedContact(e.target.value);\n  };\n\n  const db = () => {\n    database.ref(`user/${props.uid}`).remove();\n    database.ref(`user/${props.uid}/message`).on(\"value\", (data) => {\n      if (data.exists()) {\n        const res = data.val();\n        setSendStaus(res);\n        setLoading(false);\n        toggleDispatch();\n      }\n    });\n  };\n\n  const deleteDB = async () => {\n    setSendStaus([]);\n    await database.ref(`user/${props.uid}/message`).remove();\n  };\n\n  const sendMessages = async () => {\n    setLoading(true);\n    db();\n\n    const tmpVariants = props.textMessageVariants.variants.map((elm) => {\n      return elm.body;\n    });\n\n    for (let i = 0; i < contactsInterval.length; i++) {\n      const tmpToken = await firebase.auth().currentUser.getIdTokenResult(true);\n      await fetch(\n        \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/sendSingleMessages/\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            uid: props.uid,\n            contactId: selectedContact,\n            connectionId: selectedConnection,\n            variants: { variants: tmpVariants },\n            token: tmpToken.token,\n            cooldown: selectedCooldown * 1000,\n            contactsInterval: contactsInterval[i],\n            isFirst: i === 0,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      ).catch((err) => console.log(err));\n    }\n  };\n\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"contacts\" }],\n      storeAs: \"contacts\",\n    },\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"credentials\" }],\n      storeAs: \"connections\",\n    },\n  ]);\n\n  if (dispatchStatus) {\n    return (\n      <Modal\n        open={dispatchStatus}\n        passiveModal\n        onRequestClose={handleModalClose}\n        modalHeading=\"Dispatch status\"\n        hasForm\n      >\n        {/*\n        <InlineNotification\n          kind=\"success\"\n          title={sendStatus.message}\n          caption={(sendStatus.message, sendStatus.date)}\n        />\n\t*/}\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader />\n              <TableHeader>Phone </TableHeader>\n              <TableHeader>Message </TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sendStatus.map((elm, i) => {\n              return (\n                <TableRow key={i}>\n                  <TableCell>{i} </TableCell>\n                  <TableCell>\n                    <InlineLoading\n                      status={elm.sendStatus}\n                      description={elm.receiverNumber}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <ExpandableTile>\n                      <p></p>\n                      <TileAboveTheFoldContent>\n                        <p>{elm.message}</p>\n                      </TileAboveTheFoldContent>\n                    </ExpandableTile>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Modal>\n    );\n  } else {\n    return (\n      <div className=\"send-text-message\">\n        {loading ? <Loading /> : null}\n        <SelectConnection\n          handleSelectContact={handleSelectContact}\n          handleSelectConnection={handleSelectConnection}\n          handleSelectCooldown={handleSelectCooldown}\n          cooldown={selectedCooldown}\n        />\n\n        {props.textMessageVariants.variants.map((elm, i) => {\n          return (\n            <div onClick={() => props.setActiveVariant(i)}>\n              <TextEditor\n                key={i}\n                editVariant={props.editVariant}\n                variables={contact.variables}\n                editorIndex={i}\n                textState={elm.textState}\n                open={elm.active}\n              />\n            </div>\n          );\n        })}\n\n        <AddTextEditor messageType=\"text\" />\n\n        {props.textMessageVariants.variants.length > 0 ? (\n          <Button\n            kind=\"primary\"\n            style={{ marginTop: \"64px\" }}\n            renderIcon={Send16}\n            onClick={sendMessages}\n          >\n            Send Messages\n          </Button>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    textMessageVariants: state.textMessageVariants,\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n    uid: state.firebase.auth.uid,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeNav: (elm) => dispatch(changeNav(elm)),\n    createVariant: (elm) => dispatch(CreateVariant(elm)),\n    deleteVariant: (id) => dispatch(DeleteVariant(id)),\n    editVariant: (index, text) => dispatch(EditVariant(index, text)),\n    deleteAll: () => dispatch(DeleteAll()),\n    setActiveVariant: (id) => dispatch(SetActiveVariant(id)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(SendTextMessage);\n","import React, { useState } from \"react\";\nimport { Add32, TrashCan16 } from \"@carbon/icons-react\";\nimport {\n  FileUploaderItem,\n  FileUploaderDropContainer,\n  Loading,\n  Button,\n  InlineNotification,\n} from \"carbon-components-react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { DefaultPlayer as Video } from \"react-html5video\";\nimport \"react-html5video/dist/styles.css\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport {\n  CreateVariant,\n  DeleteVariant,\n  DeleteAll,\n  SetActiveVariant,\n  SetMediaPath,\n  SetMediaType,\n} from \"./../../store/actions/MediaMessageVariantAction\";\n\nfunction MediaGadget(props) {\n  const firebase = useFirebase();\n  const [status, setStatus] = useState(\"upload\");\n  const [image, setImage] = useState(\"#\");\n  const [audio, setAudio] = useState(\"#\");\n  const [video, setVideo] = useState(\"#\");\n  const [document, setDocument] = useState({});\n  const [fileName, setFileName] = useState(\"\");\n  const [warn, setWarn] = useState({\n    isOn: false,\n    message: \"\",\n  });\n\n  const createSticker = async () => {\n    await fetch(\n      \"http://localhost:5000/connectivitys-2066c/us-central1/api/sticker/\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          uid: props.uid,\n          mediaPath: fileName,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).catch((err) => console.log(err));\n  };\n\n  const handleFile = async (evt, { addedFiles }) => {\n    const file = addedFiles[0];\n    const MBSize = file.size * 0.000001;\n    const correctFormat =\n      file.type === \"application/pdf\" ||\n      file.type === \"image/jpg\" ||\n      file.type === \"audio/mpeg\" ||\n      file.type === \"video/mp4\" ||\n      file.type === \"image/jpeg\";\n\n    if (MBSize > 2.5) {\n      setWarn({\n        isOn: true,\n        message: \"File size must be less than 2.5mb\",\n      });\n    } else if (!correctFormat) {\n      setWarn({\n        isOn: true,\n        message: `Incorrect file format. ${file.type} not allowed`,\n      });\n    } else {\n      setWarn({\n        isOn: false,\n        message: \"\",\n      });\n    }\n\n    const upload = async () => {\n      await firebase.uploadFile(`user/${props.uid}/media`, file);\n    };\n\n    setFileName(file.name);\n    setStatus(\"loading\");\n\n    switch (file.type) {\n      case \"application/pdf\":\n        if (MBSize > 2.5 || !correctFormat) {\n          setStatus(\"upload\");\n          props.setAddText(false);\n          props.setSendMessage(false);\n          break;\n        } else {\n          props.setMediaPath(file.name);\n          await upload();\n          setDocument(file.name);\n          props.setMediaType(\"document\");\n          props.setSendMessage(true);\n          props.setAddText(false);\n          setStatus(\"document\");\n          break;\n        }\n\n      /*\n      case \"image/png\":\n        props.setMediaPath(file.name);\n        await firebase.uploadFile(`user/${props.uid}/media`, file);\n        await createSticker();\n        setImage(URL.createObjectURL(file));\n        props.setMediaType(\"sticker\");\n        props.setAddText(false);\n        props.setSendMessage(true);\n        setStatus(\"sticker\");\n        break;\n*/\n      case \"image/jpeg\":\n        if (MBSize > 2.5 || !correctFormat) {\n          setStatus(\"upload\");\n          props.setAddText(false);\n          props.setSendMessage(false);\n          break;\n        } else {\n          props.setMediaPath(file.name);\n          await upload();\n          setImage(URL.createObjectURL(file));\n          props.setMediaType(\"image\");\n          props.setAddText(true);\n          props.setSendMessage(true);\n          setStatus(\"image\");\n          break;\n        }\n\n      case \"image/jpg\":\n        if (MBSize > 2.5 || !correctFormat) {\n          setStatus(\"upload\");\n          props.setAddText(false);\n          props.setSendMessage(false);\n          break;\n        } else {\n          props.setMediaPath(file.name);\n          await upload();\n          setImage(URL.createObjectURL(file));\n          props.setMediaType(\"image\");\n          props.setSendMessage(true);\n          setStatus(\"image\");\n          break;\n        }\n\n      case \"audio/mpeg\":\n        if (MBSize > 2.5 || !correctFormat) {\n          setStatus(\"upload\");\n          props.setAddText(false);\n          props.setSendMessage(false);\n          break;\n        } else {\n          props.setMediaPath(file.name);\n          await upload();\n          setAudio(URL.createObjectURL(file));\n          props.setMediaType(\"audio\");\n          props.setAddText(false);\n          props.setSendMessage(true);\n          setStatus(\"audio\");\n          break;\n        }\n\n      case \"video/mp4\":\n        if (MBSize > 2.5 || !correctFormat) {\n          setStatus(\"upload\");\n          props.setAddText(false);\n          props.setSendMessage(false);\n          break;\n        } else {\n          props.setMediaPath(file.name);\n          await upload();\n          setVideo(URL.createObjectURL(file));\n          props.setMediaType(\"video\");\n          props.setAddText(true);\n          props.setSendMessage(true);\n          setStatus(\"video\");\n          break;\n        }\n\n      default:\n        setStatus(\"upload\");\n        props.setAddText(false);\n        props.setSendMessage(false);\n        break;\n    }\n  };\n\n  const deleteVideo = async () => {\n    const ref = firebase.storage().ref(`user/${props.uid}/media/${fileName}`);\n    await ref.delete();\n    props.setSendMessage(false);\n    props.setMediaPath(\"\");\n    props.deleteAll();\n    setStatus(\"upload\");\n  };\n\n  const deleteAudio = async () => {\n    const ref = firebase.storage().ref(`user/${props.uid}/media/${fileName}`);\n    await ref.delete();\n    props.setSendMessage(false);\n    props.setMediaPath(\"\");\n    props.deleteAll();\n    setStatus(\"upload\");\n  };\n\n  const deleteImage = async () => {\n    const ref = firebase.storage().ref(`user/${props.uid}/media/${fileName}`);\n    await ref.delete();\n    props.setSendMessage(false);\n    props.setMediaPath(\"\");\n    props.deleteAll();\n    setStatus(\"upload\");\n  };\n\n  const deleteDocument = async () => {\n    const ref = firebase.storage().ref(`user/${props.uid}/media/${fileName}`);\n    await ref.delete();\n    props.setSendMessage(false);\n    props.setMediaPath(\"\");\n    props.deleteAll();\n    setStatus(\"upload\");\n  };\n\n  /*\n    case \"sticker\":\n      return (\n        <div className=\"MediaGadget\">\n          <img className=\"image\" src={image} />\n          <div className=\"DeleteButton\">\n            <Button\n              iconDescription=\"Delete this file\"\n              hasIconOnly\n              renderIcon={TrashCan16}\n              kind=\"secondary\"\n              size=\"sm\"\n              onClick={deleteImage}\n            />\n          </div>\n        </div>\n      );\n*/\n\n  if (status === \"image\") {\n    return (\n      <div className=\"MediaGadget\">\n        <img className=\"image\" src={image} />\n        <div className=\"DeleteButton\">\n          <Button\n            iconDescription=\"Delete this file\"\n            hasIconOnly\n            renderIcon={TrashCan16}\n            kind=\"secondary\"\n            size=\"sm\"\n            onClick={deleteImage}\n          />\n        </div>\n      </div>\n    );\n  } else if (status === \"document\") {\n    return (\n      <div className=\"MediaGadget\">\n        <FileUploaderItem\n          name={document}\n          status=\"edit\"\n          onDelete={deleteDocument}\n        />\n      </div>\n    );\n  } else if (status === \"video\") {\n    return (\n      <div className=\"MediaGadget\">\n        <Video loop controls={[\"PlayPause\", \"Seek\", \"Time\", \"Volume\"]}>\n          <source src={video} type=\"video/mp4\" />\n        </Video>\n        <div className=\"DeleteButton\">\n          <Button\n            iconDescription=\"Delete this file\"\n            hasIconOnly\n            renderIcon={TrashCan16}\n            kind=\"secondary\"\n            size=\"sm\"\n            onClick={deleteVideo}\n          />\n        </div>\n      </div>\n    );\n  } else if (status === \"audio\") {\n    return (\n      <div className=\"MediaGadget\">\n        <AudioPlayer src={audio} />\n        <div className=\"DeleteButton\">\n          <Button\n            iconDescription=\"Delete this file\"\n            hasIconOnly\n            renderIcon={TrashCan16}\n            kind=\"secondary\"\n            size=\"sm\"\n            onClick={deleteAudio}\n          />\n        </div>\n      </div>\n    );\n  } else if (status === \"loading\") {\n    return (\n      <div className=\"MediaGadget\">\n        <Loading withOverlay={false} />\n      </div>\n    );\n  } else if (status === \"upload\") {\n    return (\n      <div>\n        <div className=\"MediaGadget\">\n          <FileUploaderDropContainer\n            labelText=\"Drop your media file here\"\n            onAddFiles={handleFile}\n            accept={[\n              \"application/pdf\",\n              \"image/png\",\n              \"image/jpg\",\n              \"image/jpeg\",\n              \"audio/mpeg\",\n              \"video/mp4\",\n            ]}\n          />\n        </div>\n        {warn.isOn ? (\n          <div className=\"Warn\">\n            <InlineNotification kind=\"warning\" title={warn.message} />\n          </div>\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"MediaGadget\">\n        <FileUploaderDropContainer labelText=\"Drop your media file here\" />\n      </div>\n    );\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    createVariant: (elm) => dispatch(CreateVariant(elm)),\n    deleteVariant: (id) => dispatch(DeleteVariant(id)),\n    deleteAll: () => dispatch(DeleteAll()),\n    setActiveVariant: (id) => dispatch(SetActiveVariant(id)),\n    setMediaPath: (path) => dispatch(SetMediaPath(path)),\n    setMediaType: (type) => dispatch(SetMediaType(type)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(MediaGadget);\n","import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport TextEditor from \"./../components/TextEditor/TextEditor\";\nimport MediaGadget from \"./../components/MediaGadget/MediaGadget\";\nimport AddTextEditor from \"./../components/AddTextEditor/AddTextEditor\";\nimport {\n  CreateVariant,\n  EditVariant,\n  DeleteVariant,\n  DeleteAll,\n  SetActiveVariant,\n} from \"./../store/actions/MediaMessageVariantAction\";\nimport { changeNav } from \"./../store/actions/SideNavActions\";\nimport {\n  Loading,\n  Table,\n  TableRow,\n  TableHead,\n  TableHeader,\n  TableCell,\n  Button,\n  Modal,\n  InlineLoading,\n  ExpandableTile,\n  TileAboveTheFoldContent,\n  TableBody,\n} from \"carbon-components-react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect, useFirebase } from \"react-redux-firebase\";\nimport { Send16 } from \"@carbon/icons-react\";\nimport SelectConnection from \"./../components/SelectConnection/SelectConnection\";\n\nfunction SendMediaMessage(props) {\n  useEffect(() => {\n    props.deleteAll();\n  }, []);\n  const firebase = useFirebase();\n  const database = firebase.database();\n  const history = useHistory();\n  const [selectedConnection, setSelectedConnection] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(\"\");\n  const [selectedCooldown, setSelectedCooldown] = useState(\"10\");\n  const [contactsInterval, setContactsInterval] = useState([]);\n\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const mainRef = useRef(null);\n  const [sendStatus, setSendStaus] = useState([]);\n  const [dispatchStatus, setDispatchStatus] = useState(false);\n  const [sendMessasges, setSendMessages] = useState(false);\n  const [addText, setAddText] = useState(false);\n\n  const [contact, setContact] = useState({\n    id: \"contact\",\n    variables: [\"Contact list is not selected\"],\n    length: 1,\n  });\n\n  useEffect(() => {\n    calcContactsInterval();\n  }, [contact, selectedCooldown, selectedConnection]);\n\n  useEffect(() => {\n    console.log(contactsInterval);\n  }, [contactsInterval]);\n\n  const calcContactsInterval = () => {\n    const messageAmount = Math.floor(290 / (5 + parseInt(selectedCooldown)));\n    console.log(\"Message amount: \", messageAmount);\n    console.log(\"Contact length: \", contact.length);\n\n    const messageQuant =\n      messageAmount > contact.length\n        ? 1\n        : Math.floor(contact.length / messageAmount);\n    const messageReminder =\n      messageAmount > contact.length\n        ? 0\n        : Math.floor(contact.length % messageAmount);\n    const count = 0;\n    let tmpInterval = [];\n    let lastSuperior = 0;\n\n    for (let i = 0; i < messageQuant; i++) {\n      if (messageAmount > contact.length) {\n        tmpInterval.push([0, contact.length]);\n      } else {\n        tmpInterval.push([i * messageAmount, (i + 1) * messageAmount]);\n      }\n      lastSuperior = (i + 1) * messageAmount;\n    }\n    if (messageReminder !== 0) {\n      tmpInterval.push([lastSuperior, lastSuperior + messageReminder]);\n    }\n    setContactsInterval(tmpInterval);\n    console.log(\"tmpInterval: \", tmpInterval);\n  };\n\n  const handleSelectCooldown = (e) => {\n    setSelectedCooldown(e.target.value);\n  };\n\n  const db = () => {\n    database.ref(`user/${props.uid}/mediaMessage`).remove();\n    database.ref(`user/${props.uid}/mediaMessage`).on(\"value\", (data) => {\n      if (data.exists()) {\n        const res = data.val();\n        setSendStaus(res);\n        setLoading(false);\n        toggleDispatch();\n        props.deleteAll();\n      }\n    });\n  };\n\n  const deleteDB = async () => {\n    setSendStaus([]);\n    await database.ref(`user/${props.uid}/mediaMessage`).remove();\n  };\n\n  const handleText = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSelectConnection = (e) => {\n    setSelectedConnection(e.target.value);\n  };\n\n  const createMessageVariant = () => {\n    props.createVariant({ body: text });\n    setText(\"\");\n  };\n\n  const toggleDispatch = () => {\n    setDispatchStatus(!dispatchStatus);\n  };\n\n  const handleModalClose = () => {\n    deleteDB();\n    props.changeNav(\"dashboard\");\n    history.push(\"/app/dashboard\");\n  };\n\n  const handleSelectContact = (e) => {\n    const tmpContact = props.contacts.find((elm) => {\n      return elm.id === e.target.value;\n    });\n    setSelectedContact(e.target.value);\n    setContact(tmpContact);\n  };\n\n  const sendMessages = async () => {\n    setLoading(true);\n    db();\n\n    let fireWall = false;\n\n    for (let i = 0; i < contactsInterval.length; i++) {\n      if (!fireWall) {\n        const tmpToken = await firebase.auth().currentUser.getIdToken(true);\n        await fetch(\n          \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/sendSingleMediaMessage/\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              uid: props.uid,\n              contactId: selectedContact,\n              connectionId: selectedConnection,\n              variants: props.mediaMessageVariants,\n              token: tmpToken,\n              cooldown: selectedCooldown * 1000,\n              contactsInterval: contactsInterval[i],\n              isFirst: i === 0,\n              isLast: i === contactsInterval.length - 1,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then((res) => {\n            return res.json();\n          })\n          .catch((err) => {\n            fireWall = true;\n            console.log(\"Error response from server: \", err);\n          });\n      }\n    }\n  };\n\n  useFirestoreConnect([\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"contacts\" }],\n      storeAs: \"contacts\",\n    },\n    {\n      collection: \"user\",\n      doc: props.uid,\n      subcollections: [{ collection: \"credentials\" }],\n      storeAs: \"connections\",\n    },\n  ]);\n\n  if (dispatchStatus) {\n    return (\n      <Modal\n        open={dispatchStatus}\n        passiveModal\n        onRequestClose={handleModalClose}\n        modalHeading=\"Dispatch status\"\n        hasForm\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableHeader />\n              <TableHeader>Phone </TableHeader>\n              <TableHeader>Message </TableHeader>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sendStatus.map((elm, i) => {\n              return (\n                <TableRow key={i}>\n                  <TableCell>{i} </TableCell>\n                  <TableCell>\n                    <InlineLoading\n                      status={elm.sendStatus}\n                      description={elm.receiverNumber}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <ExpandableTile>\n                      <p></p>\n                      <TileAboveTheFoldContent>\n                        <p>{elm.message}</p>\n                      </TileAboveTheFoldContent>\n                    </ExpandableTile>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Modal>\n    );\n  } else {\n    return (\n      <div className=\"send-text-message\">\n        {loading ? <Loading /> : null}\n        <SelectConnection\n          handleSelectContact={handleSelectContact}\n          handleSelectConnection={handleSelectConnection}\n          handleSelectCooldown={handleSelectCooldown}\n          cooldown={selectedCooldown}\n        />\n\n        <MediaGadget setAddText={setAddText} setSendMessage={setSendMessages} />\n\n        {sendMessasges ? (\n          <Fragment>\n            {props.mediaMessageVariants.variants.map((elm, i) => {\n              return (\n                <div onClick={() => props.setActiveVariant(i)}>\n                  <TextEditor\n                    key={i}\n                    editVariant={props.editVariant}\n                    variables={contact.variables}\n                    editorIndex={i}\n                    textState={elm.textState}\n                    open={elm.active}\n                  />\n                </div>\n              );\n            })}\n\n            {addText ? <AddTextEditor messageType=\"media\" /> : null}\n\n            <Button\n              kind=\"primary\"\n              style={{ marginTop: \"64px\" }}\n              renderIcon={Send16}\n              onClick={sendMessages}\n            >\n              Send Messages\n            </Button>\n          </Fragment>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    mediaMessageVariants: state.mediaMessageVariants,\n    contacts: state.firestore.ordered.contacts,\n    connections: state.firestore.ordered.connections,\n    uid: state.firebase.auth.uid,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeNav: (elm) => dispatch(changeNav(elm)),\n    createVariant: (elm) => dispatch(CreateVariant(elm)),\n    deleteVariant: (id) => dispatch(DeleteVariant(id)),\n    editVariant: (index, text) => dispatch(EditVariant(index, text)),\n    deleteAll: () => dispatch(DeleteAll()),\n    setActiveVariant: (id) => dispatch(SetActiveVariant(id)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(SendMediaMessage);\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, TextInput, Loading } from \"carbon-components-react\";\n\nimport { changeNav } from \"./../store/actions/SideNavActions\";\nimport * as QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CreateNewConnection(props) {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [qr, setQr] = useState(\"\");\n  const firebase = useFirebase();\n  const database = firebase.database();\n\n  const DB = () => {\n    database.ref(`user/${props.uid}/QR`).on(\"value\", (data) => {\n      if (data.exists()) {\n        console.log(\"QR ADDED!: \", data.val());\n        const res = data.val();\n        setName(\"\");\n        setQr(res.qrCode);\n        setConnectionState(\"qr\");\n      }\n    });\n  };\n\n  const createConnection = () => {\n    handleClick(\"loading\");\n    DB();\n\n    fetch(\n      \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/createNewConnection/\",\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({\n          uid: props.uid,\n          connectionName: name,\n          token: props.token,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        handleModalClose();\n      });\n  };\n\n  const [connectionState, setConnectionState] = useState(\"name\");\n\n  const handleModalClose = () => {\n    props.changeNav(\"dashboard\");\n    history.push(\"app/dashboard\");\n  };\n\n  const handleClick = (value) => {\n    setConnectionState(value);\n  };\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  };\n\n  switch (connectionState) {\n    case \"name\":\n      return (\n        <Modal\n          onRequestSubmit={async () => {\n            createConnection();\n          }}\n          hasForm\n          open\n          modalHeading={<h2> Create new connection</h2>}\n          primaryButtonText=\"Create\"\n        >\n          <br />\n          <TextInput\n            onChange={handleName}\n            labelText=\"Connection's name\"\n            value={name}\n          />\n        </Modal>\n      );\n\n    case \"loading\":\n      return <Loading />;\n\n    case \"qr\":\n      return (\n        <Modal hasForm passiveModal open modalHeading={<h2>Scan the code</h2>}>\n          <br />\n          <p> Open whatsapp and scan the QR code</p>\n          <br />\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\n          >\n            <QRCode value={qr} />\n          </div>\n        </Modal>\n      );\n\n    default:\n      return null;\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeNav: (elm) => dispatch(changeNav(elm)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(CreateNewConnection);\n","import React, { useState } from \"react\";\nimport { Modal, Loading, FileUploader } from \"carbon-components-react\";\nimport { changeNav } from \"./../store/actions/SideNavActions\";\n\nimport { connect } from \"react-redux\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CreateNewContact(props) {\n  const firebase = useFirebase();\n  const history = useHistory();\n\n  const [connectionState, setConnectionState] = useState(\"file\");\n  const [fileStatus, setFileStatus] = useState(\"uploading\");\n\n  const handleModalClose = () => {\n    props.changeNav(\"dashboard\");\n    history.push(\"/app/dashboard\");\n  };\n  const handleFile = async (e) => {\n    const file = e.target.files[0];\n    await firebase\n      .uploadFile(`user/${props.uid}/contacts`, file)\n      .catch((err) => console.log(err));\n\n    await fetch(\n      \"https://us-central1-connectivitys-2066c.cloudfunctions.net/api/validateSingleContact/\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          uid: props.uid,\n          contactName: file.name,\n          token: props.token,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).catch((err) => console.log(err));\n\n    setFileStatus(\"complete\");\n  };\n\n  switch (connectionState) {\n    case \"loading\":\n      return <Loading />;\n\n    case \"file\":\n      return (\n        <Modal\n          onRequestSubmit={handleModalClose}\n          open\n          modalHeading={<h2>Upload your csv</h2>}\n          primaryButtonText=\"Done\"\n        >\n          <br />\n          <p>\n            Upload your csv here. Remember that the first column’s header must\n            be “phone” (without quotes) and all it’s cells must be user’s phone\n            number with its country code (ex: 59594123456).\n          </p>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <FileUploader\n              filenameStatus={fileStatus}\n              buttonLabel=\"Add file\"\n              onChange={handleFile}\n            />\n          </div>\n        </Modal>\n      );\n    default:\n      return null;\n  }\n}\n\nconst stateToProps = (state) => {\n  return {\n    uid: state.firebase.auth.uid,\n    token: state.firebase.profile.token.token,\n  };\n};\n\nconst dispatchToProps = (dispatch) => {\n  return {\n    changeNav: (elm) => dispatch(changeNav(elm)),\n  };\n};\n\nexport default connect(stateToProps, dispatchToProps)(CreateNewContact);\n","import React from \"react\";\nimport { Content } from \"carbon-components-react\";\nimport Header from \"./components/Header/Header\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { connect } from \"react-redux\";\nimport {\n  ConnectionStatus,\n  ContactStatus,\n  Dashboard,\n  SendMediaMessage,\n  SendTextMessage,\n  Login,\n  CreateNewConnection,\n  CreateNewContact,\n} from \"./pages\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.scss\";\n\nfunction App(props) {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          {props.auth.isEmpty ? <Header /> : <Redirect to=\"/app/dashboard\" />}\n          <Content className={\"content\"}>\n            <Login />\n          </Content>\n        </Route>\n\n        <Route path=\"/app\">\n          <Header />\n          <SideBar />\n          {props.auth.isEmpty ? (\n            <Redirect to=\"/login\" />\n          ) : (\n            <Content className={\"content\"}>\n              <Switch>\n                <Route path={`/app/create-new-connection`}>\n                  <CreateNewConnection />\n                </Route>\n                <Route path={`/app/create-new-contact`}>\n                  <CreateNewContact />\n                </Route>\n                <Route path={`/app/dashboard`}>\n                  <Dashboard />\n                </Route>\n                <Route path={`/app/send-text-message`}>\n                  <SendTextMessage />\n                </Route>\n                <Route path={`/app/send-media-message`}>\n                  <SendMediaMessage />\n                </Route>\n                <Route path=\"/app/connection-status/:id\">\n                  <ConnectionStatus />\n                </Route>\n                <Route path=\"/app/contact-status/:id\">\n                  <ContactStatus />\n                </Route>\n                <Route path=\"*\">\n                  <Redirect to=\"/app/dashboard\" />\n                </Route>\n              </Switch>\n            </Content>\n          )}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/app/dashboard\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst stateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(stateToProps)(App);\n","const initState = {\n  variants: [],\n};\n\nconst textMessageVariantReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SET_TEXT_ACTIVE\":\n      return {\n        ...state,\n        variants: state.variants.map((elm, i) => {\n          if (i === action.data) {\n            return { ...elm, active: true };\n          } else {\n            return { ...elm, active: false };\n          }\n        }),\n      };\n\n    case \"CREATE_TEXT\":\n      const tmp = state.variants.map((elm) => {\n        return { ...elm, active: false };\n      });\n      return {\n        ...state,\n        variants: tmp.concat(action.data),\n      };\n\n    case \"EDIT_TEXT\":\n      return {\n        variants: state.variants.map((elm, i) => {\n          if (i === action.data.index) {\n            return {\n              body: action.data.body,\n              textState: action.data.textState,\n              active: true,\n            };\n          } else {\n            return elm;\n          }\n        }),\n      };\n\n    case \"DELETE_TEXT\":\n      return {\n        ...state,\n        variants: state.variants.filter((elm, i) => i !== 0),\n      };\n\n    default:\n      return {\n        ...state,\n      };\n\n    case \"DELETE_ALL_TEXT\":\n      return {\n        ...state,\n        variants: [],\n      };\n  }\n};\n\nexport default textMessageVariantReducer;\n","const initState = {\n  variants: [],\n};\n\nconst mediaMessageVariantReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SET_MEDIA_TEXT_ACTIVE\":\n      return {\n        ...state,\n        variants: state.variants.map((elm, i) => {\n          if (i === action.data) {\n            return { ...elm, active: true };\n          } else {\n            return { ...elm, active: false };\n          }\n        }),\n      };\n\n    case \"SET_MEDIA_PATH\":\n      return {\n        ...state,\n        mediaPath: action.data,\n      };\n\n    case \"SET_MEDIA_TYPE\":\n      return {\n        ...state,\n        mediaType: action.data,\n      };\n\n    case \"CREATE_MEDIA_TEXT\":\n      const tmp = state.variants.map((elm) => {\n        return { ...elm, active: false };\n      });\n      return {\n        ...state,\n        variants: tmp.concat(action.data),\n      };\n\n    case \"EDIT_MEDIA_TEXT\":\n      return {\n        ...state,\n        variants: state.variants.map((elm, i) => {\n          if (i === action.data.index) {\n            return {\n              body: action.data.body,\n              textState: action.data.textState,\n              active: true,\n            };\n          } else {\n            return elm;\n          }\n        }),\n      };\n\n    case \"DELETE_MEDIA_TEXT\":\n      return {\n        ...state,\n        variants: state.variants.filter((elm, i) => i !== 0),\n      };\n\n    default:\n      return {\n        ...state,\n      };\n\n    case \"DELETE_ALL_MEDIA_TEXT\":\n      return {\n        ...state,\n        variants: [],\n      };\n  }\n};\n\nexport default mediaMessageVariantReducer;\n","const initState = {\n  activeTab: \"dashboard\",\n};\n\nconst sideNavReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        activeTab: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sideNavReducer;\n","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\"; // <- needed if using firestore\nimport textMessageVariantReducer from \"./reducers/TextMessageVariantReducer\";\nimport mediaMessageVariantReducer from \"./reducers/MediaMessageVariantReducer\";\nimport sideNavReducer from \"./reducers/SideNavReducer\";\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  sideNav: sideNavReducer,\n  textMessageVariants: textMessageVariantReducer,\n  mediaMessageVariants: mediaMessageVariantReducer,\n});\n\nexport default rootReducer;\n","const fbConfig = {\n  apiKey: \"AIzaSyAXsdOOxF8isFcNw-H-jxeWDy2OoLzTb1A\",\n  authDomain: \"connectivitys-2066c.firebaseapp.com\",\n  databaseURL: \"https://connectivitys-2066c.firebaseio.com\",\n  projectId: \"connectivitys-2066c\",\n  storageBucket: \"connectivitys-2066c.appspot.com\",\n  messagingSenderId: \"1061761115877\",\n  appId: \"1:1061761115877:web:635e0fa726dc8b1833160c\",\n};\n\nexport default fbConfig;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.scss\";\n\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport rootReducer from \"./store/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport fbConfig from \"./.env.js\";\n\nimport firebase from \"firebase/app\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/functions\";\nimport \"firebase/database\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\"; // <- needed if using firestore\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nfirebase.initializeApp(fbConfig);\nfirebase.firestore();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  enableClaims: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  useFirestoreForProfile: true,\n  // createFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}